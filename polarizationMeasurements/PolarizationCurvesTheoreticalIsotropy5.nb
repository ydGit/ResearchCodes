(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    223866,       4596]
NotebookOptionsPosition[    220203,       4479]
NotebookOutlinePosition[    220735,       4500]
CellTagsIndexPosition[    220692,       4497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Defects", " ", "with", " ", "the", " ", "symmetry", " ", "along"}], " ", 
   "<", "100", ">", " ", "direction"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6043266695632124`*^9, 3.6043267095939503`*^9}, 
   3.60606365056386*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d100", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], ";", " ", 
  RowBox[{"d010", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";", " ", 
  RowBox[{"d001", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6043255049843693`*^9, 3.604325512499898*^9}, {
  3.604325559858667*^9, 3.604325563921115*^9}, {3.6043266035796824`*^9, 
  3.604326608173373*^9}, {3.604326641344824*^9, 3.604326667813235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Defects", " ", "with", " ", "the", " ", "symmetry", " ", "along"}], " ", 
    "<", "110", ">", " ", "direction"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d110", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], "*", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}]}]}], ";", " ", 
    RowBox[{"d101", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], "*", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d011", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], "*", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}]}], ";", " ", 
    RowBox[{"d1m10", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], "*", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}]}], ";", " ", 
    RowBox[{"d01m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], "*", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}]}], "}"}]}]}], ";", " ", 
    RowBox[{"d10m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["2"]}], "*", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", 
        RowBox[{"-", "1"}]}], "}"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.604326761390162*^9, 3.60432691310697*^9}, {
  3.6043308288849726`*^9, 3.6043308404473248`*^9}, {3.6043309796174183`*^9, 
  3.6043310012108917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Defects", " ", "with", " ", "the", " ", "symmetry", " ", "along"}], " ", 
    "<", "111", ">", " ", "direction"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d111", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["3"]}], "*", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}]}], ";", " ", 
    RowBox[{"dm1m11", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["3"]}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1m1m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["3"]}], "*", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}]}], "}"}]}]}], ";", " ", 
    RowBox[{"dm11m1", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       SqrtBox["3"]}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}]}], "}"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6043308547127666`*^9, 3.6043309114620404`*^9}, {
  3.6043310121326265`*^9, 3.6043310192731605`*^9}, {3.6043402142438507`*^9, 
  3.6043402552902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Rotation", " ", "of", " ", "the", " ", "vector", " ", "\"\<d\>\"", " ", 
    "in", " ", "the", " ", "XY", " ", "plane", " ", "by", " ", "the", " ", 
    "angle", " ", "theta", " ", "\"\<th\>\""}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Rot", "[", 
     RowBox[{"d_", ",", " ", "th_"}], "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"Pi", "*", 
          RowBox[{"th", "/", "180"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "*", 
          RowBox[{"th", "/", "180"}]}], "]"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "*", 
          RowBox[{"th", "/", "180"}]}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"d", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"Pi", "*", 
          RowBox[{"th", "/", "180"}]}], "]"}]}]}], ",", " ", 
      RowBox[{"d", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.60433779754041*^9, 3.604337800727869*^9}, {
  3.604942736753123*^9, 3.604942749371336*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Project", " ", "vector", " ", "b", " ", "on", " ", 
    RowBox[{"a", ":", " ", 
     RowBox[{
     "Return", " ", "part", " ", "of", " ", "b", " ", "that", " ", "is", " ", 
      "parallel", " ", "to", " ", "a"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ParA", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
     RowBox[{"a", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", ".", "b"}], ")"}], "/", 
       RowBox[{
        RowBox[{"Norm", "[", "a", "]"}], "^", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Project", " ", "vector", " ", "b", " ", "perpendicular", " ", "to", " ", 
     RowBox[{"a", ":", " ", 
      RowBox[{
      "Return", " ", "part", " ", "of", " ", "b", " ", "that", " ", "is", " ",
        "orthogonal", " ", "to", " ", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PerpA", "[", 
      RowBox[{"a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
     RowBox[{"b", " ", "-", " ", 
      RowBox[{"ParA", "[", 
       RowBox[{"a", ",", " ", "b"}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.604940254318825*^9, 3.604940413750366*^9}, {
  3.60494286533928*^9, 3.604942891376931*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Orientations", " ", "of", " ", "the", " ", "analyzer", " ", "and", " ", 
    "laser", " ", 
    RowBox[{"field", ":", " ", 
     RowBox[{"co", " ", "and", " ", "cross"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";", " ", 
    RowBox[{"Lco", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], ";", " ", 
    RowBox[{"Lcr", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Direction", " ", "of", " ", "observation"}], ",", " ", 
     RowBox[{"along", " ", "z", " ", "axis"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6043382099882555`*^9, 3.604338288081006*^9}, {
  3.604941220089367*^9, 3.604941292899049*^9}, {3.604943612425192*^9, 
  3.604943632021602*^9}, {3.604943688008501*^9, 3.604943691287573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"NO", " ", 
    RowBox[{"Saturation", ":", " ", 
     RowBox[{"linear", " ", "response"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Lin", "[", "g_", "]"}], " ", ":=", " ", "g"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.604336617930509*^9, 3.604336630117853*^9}, {
  3.6043378088996396`*^9, 3.60433782139948*^9}, {3.6073596928143597`*^9, 
  3.6073596929237347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "YES", " ", "Saturation", " ", "with", " ", "Gaussian", " ", "beam"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Sat", "[", "g_", "]"}], " ", ":=", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", "g"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6043366323834496`*^9, 3.6043366393208604`*^9}, {
  3.6043378274619017`*^9, 3.6043378384930105`*^9}, {3.6073596951268597`*^9, 
  3.6073596952831097`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Determines", " ", "which", " ", "absorption", " ", "function", " ", 
    RowBox[{"(", 
     RowBox[{"linear", " ", "L", " ", "or", " ", "saturated", " ", "S"}], 
     ")"}], " ", "to", " ", "use"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"absF", "[", 
     RowBox[{"x_", ",", " ", "sat_"}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"sat", "\[Equal]", "\"\<L\>\""}], ",", " ", 
      RowBox[{"Lin", "[", "x", "]"}], ",", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"sat", "\[Equal]", "\"\<S\>\""}], ",", " ", 
        RowBox[{"Sat", "[", "x", "]"}], ",", " ", "0"}], "]"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6043371573611045`*^9, 3.6043372091416917`*^9}, {
  3.604337854086561*^9, 3.604337856367782*^9}, {3.604940619575*^9, 
  3.604940630092594*^9}, {3.604943113231934*^9, 3.604943115798501*^9}, {
  3.6073596995956097`*^9, 3.6073597027674847`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Effective", " ", "absorption", " ", 
   RowBox[{"amplitude", ".", " ", "We"}], " ", "consider", " ", "only", " ", 
   "electric", " ", "dipole", " ", "absorption"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6043370741746693`*^9, 3.6043371047992773`*^9}, {
  3.604940668482329*^9, 3.604940681177471*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pabs", "[", 
    RowBox[{
    "d_", ",", " ", "L_", ",", " ", "mAbs_", ",", " ", "g_", ",", " ", "sat_",
      ",", " ", "th_"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"mAbs", "\[Equal]", "\"\<z\>\""}], ",", " ", 
     RowBox[{"absF", "[", 
      RowBox[{
       RowBox[{"g", "*", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{"ParA", "[", 
           RowBox[{
            RowBox[{"Rot", "[", 
             RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "L"}], "]"}], 
          "]"}], "^", "2"}]}], ",", " ", "sat"}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mAbs", "\[Equal]", "\"\<xy\>\""}], ",", "  ", 
       RowBox[{"absF", "[", 
        RowBox[{
         RowBox[{"g", "*", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"PerpA", "[", 
             RowBox[{
              RowBox[{"Rot", "[", 
               RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "L"}], "]"}], 
            "]"}], "^", "2"}]}], ",", " ", "sat"}], "]"}], ",", " ", "0"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6043368285996876`*^9, 3.604336874224104*^9}, {
  3.6043369301765127`*^9, 3.6043370551749125`*^9}, {3.6043371227521725`*^9, 
  3.6043371263927507`*^9}, {3.604337287921933*^9, 3.6043373621084833`*^9}, {
  3.604337565340257*^9, 3.604337566043373*^9}, {3.60433763816745*^9, 
  3.6043376522766447`*^9}, {3.6043378608833494`*^9, 3.6043378646020517`*^9}, {
  3.604940783029663*^9, 3.604940788719664*^9}, {3.604940847423276*^9, 
  3.604940864155661*^9}, {3.604940925562854*^9, 3.60494093235893*^9}, {
  3.604943119338572*^9, 3.604943123459552*^9}, {3.604948624654686*^9, 
  3.604948644157258*^9}, {3.604948848553152*^9, 3.604948860650065*^9}, {
  3.6050115423485003`*^9, 3.6050115437391167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PabsB", "[", 
    RowBox[{
    "d_", ",", " ", "L_", ",", " ", "mAbs_", ",", " ", "g_", ",", " ", "sat_",
      ",", " ", "th_", ",", " ", "B_"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"mAbs", "\[Equal]", "\"\<z\>\""}], ",", " ", 
     RowBox[{"absF", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "*", 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"ParA", "[", 
            RowBox[{
             RowBox[{"Rot", "[", 
              RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "L"}], "]"}], 
           "]"}], "^", "2"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "B"}], ")"}]}], "+", "B"}], ",", " ", "sat"}], 
      "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mAbs", "\[Equal]", "\"\<xy\>\""}], ",", "  ", 
       RowBox[{"absF", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "*", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"PerpA", "[", 
              RowBox[{
               RowBox[{"Rot", "[", 
                RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "L"}], "]"}], 
             "]"}], "^", "2"}]}], "+", 
          RowBox[{"B", "*", "g", "*", 
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"ParA", "[", 
              RowBox[{
               RowBox[{"Rot", "[", 
                RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "L"}], "]"}], 
             "]"}], "^", "2"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "B"}], ")"}]}], "+", "B"}], ",", " ", "sat"}], 
        "]"}], ",", " ", "0"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6067478381822248`*^9, 3.6067479063072248`*^9}, {
  3.6067508009947248`*^9, 3.6067508431509748`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Electric", " ", "Dipole", " ", "Z"}], "-", 
   RowBox[{"type", " ", 
    RowBox[{"emission", ".", " ", "Aperture"}], " ", "Accounted", " ", 
    "for"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.606063385829485*^9, 3.60606340656386*^9}, 
   3.606063476423235*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Iz", "[", 
    RowBox[{"d_", ",", " ", "xM_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    FractionBox["1", "960"], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"128", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{"8", " ", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}]}], "-", 
      RowBox[{"30", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}], "+", 
         RowBox[{"31", " ", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
         RowBox[{"4", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "xM", "]"}]}], "+", 
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}], "-", 
         RowBox[{"17", " ", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "-", 
         RowBox[{"4", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "xM"}], "]"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"d", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"5", " ", "xM"}], "]"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.60606337828261*^9, 3.606063378579485*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Electric", " ", "Dipole", " ", "XY"}], "-", 
   RowBox[{"type", " ", 
    RowBox[{"emission", ".", " ", "Aperture"}], " ", "Accounted", " ", 
    "for"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.606063470673235*^9, 3.60606348178261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ixy", "[", 
    RowBox[{"d_", ",", " ", "xM_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "12"]}], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "16"}], "+", 
       RowBox[{"15", " ", 
        RowBox[{"Cos", "[", "xM", "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"3", " ", "xM"}], "]"}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "960"], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"128", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{"8", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}]}], "-", 
       RowBox[{"30", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"5", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}], "+", 
          RowBox[{"31", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "+", 
          RowBox[{"4", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", "xM", "]"}]}], "+", 
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"5", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "^", "2"}]}], "-", 
          RowBox[{"17", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "-", 
          RowBox[{"4", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "xM"}], "]"}]}], "-", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"d", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{
            RowBox[{"d", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "xM"}], "]"}]}]}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.60606367231386*^9, 3.606063673016985*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Effective", " ", "emission", " ", 
    RowBox[{"amplitude", ".", " ", "We"}], " ", "consider", " ", "two", " ", 
    RowBox[{"cases", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"E", " ", "--"}], " ", "electric", " ", "dipole", " ", "and", " ", 
    RowBox[{"M", " ", "--"}], " ", "magnetic", " ", "dipole"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"For", " ", "either", " ", "of", " ", "them", " ", "dipole", " ", 
    RowBox[{"(", 
     RowBox[{"p", " ", "or", " ", "m"}], ")"}], " ", "can", " ", "be", " ", 
    "parallel", " ", 
    RowBox[{"(", "\"\<z\>\"", ")"}], " ", "or"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"or", " ", "perpendicular", " ", 
    RowBox[{"(", "\"\<xy\>\"", ")"}], " ", "to", " ", "the", " ", "defect", 
    " ", "vector"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Electric", " ", "dipole", " ", "emission", " ", "function"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PEem", "[", 
      RowBox[{
      "n_", ",", " ", "d_", ",", " ", "A_", ",", "  ", "mEm_", ",", " ", 
       "th_"}], "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mEm", "\[Equal]", "\"\<z\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"ParA", "[", 
          RowBox[{
           RowBox[{"Rot", "[", 
            RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", 
           RowBox[{"PerpA", "[", 
            RowBox[{"n", ",", " ", "A"}], "]"}]}], "]"}], "]"}], "^", "2"}], 
       ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mEm", "\[Equal]", "\"\<xy\>\""}], ",", 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"PerpA", "[", 
            RowBox[{
             RowBox[{"Rot", "[", 
              RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", 
             RowBox[{"PerpA", "[", 
              RowBox[{"n", ",", " ", "A"}], "]"}]}], "]"}], "]"}], "^", "2"}],
          ",", "0"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PEemB", "[", 
      RowBox[{
      "n_", ",", " ", "d_", ",", " ", "A_", ",", "  ", "mEm_", ",", " ", 
       "th_", ",", " ", "B_"}], "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mEm", "\[Equal]", "\"\<z\>\""}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"ParA", "[", 
            RowBox[{
             RowBox[{"Rot", "[", 
              RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", 
             RowBox[{"PerpA", "[", 
              RowBox[{"n", ",", " ", "A"}], "]"}]}], "]"}], "]"}], "^", "2"}],
          "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "B"}], ")"}]}], "+", "B"}], ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mEm", "\[Equal]", "\"\<xy\>\""}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"PerpA", "[", 
              RowBox[{
               RowBox[{"Rot", "[", 
                RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", 
               RowBox[{"PerpA", "[", 
                RowBox[{"n", ",", " ", "A"}], "]"}]}], "]"}], "]"}], "^", 
            "2"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "B"}], ")"}]}], "+", "B"}], ",", "0"}], "]"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PEemAp", "[", 
      RowBox[{"d_", ",", " ", "mEm_", ",", " ", "th_", ",", " ", "xM_"}], 
      "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mEm", "\[Equal]", "\"\<z\>\""}], ",", " ", 
       RowBox[{"Iz", "[", 
        RowBox[{
         RowBox[{"Rot", "[", 
          RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "xM"}], "]"}], ",", 
       " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mEm", "\[Equal]", "\"\<xy\>\""}], ",", 
         RowBox[{"Ixy", "[", 
          RowBox[{
           RowBox[{"Rot", "[", 
            RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", "xM"}], "]"}], 
         ",", "0"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PMem", "[", 
      RowBox[{
      "n_", ",", " ", "d_", ",", " ", "A_", ",", "  ", "mEm_", ",", " ", 
       "th_"}], "]"}], " ", ":=", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mEm", "\[Equal]", "\"\<z\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{"ParA", "[", 
          RowBox[{
           RowBox[{"Rot", "[", 
            RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", 
           RowBox[{"Cross", "[", 
            RowBox[{"n", ",", " ", "A"}], "]"}]}], "]"}], "]"}], "^", "2"}], 
       ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mEm", "\[Equal]", "\"\<xy\>\""}], ",", 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"PerpA", "[", 
            RowBox[{
             RowBox[{"Rot", "[", 
              RowBox[{"d", ",", " ", "th"}], "]"}], ",", " ", 
             RowBox[{"Cross", "[", 
              RowBox[{"n", ",", " ", "A"}], "]"}]}], "]"}], "]"}], "^", "2"}],
          ",", "0"}], "]"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6043374089672585`*^9, 3.604337510356586*^9}, {
  3.6043375519029293`*^9, 3.6043375974960957`*^9}, {3.6043376551359825`*^9, 
  3.604337665417101*^9}, {3.604940971815076*^9, 3.604941140566719*^9}, {
  3.604941346751005*^9, 3.604941349768164*^9}, {3.604941747010439*^9, 
  3.604941818615149*^9}, {3.604941855923682*^9, 3.604941920089817*^9}, {
  3.604946109919592*^9, 3.604946122401257*^9}, {3.604946370531879*^9, 
  3.604946374684486*^9}, {3.60494645811695*^9, 3.604946474052841*^9}, {
  3.60606373731386*^9, 3.606063845485735*^9}, {3.6067508596666*^9, 
  3.6067508984634748`*^9}, {3.6067512429791*^9, 3.6067512446041*^9}, {
  3.6067513509791*^9, 3.6067513540416*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"P", "[", 
     RowBox[{
     "n_", ",", " ", "d_", ",", " ", "A_", ",", " ", "L_", ",", " ", "mAbs_", 
      ",", " ", "mEm_", ",", " ", "g_", ",", " ", "sat_", ",", " ", "th_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Pabs", "[", 
      RowBox[{
      "d", ",", " ", "L", ",", " ", "mAbs", ",", " ", "g", ",", " ", "sat", 
       ",", " ", "th"}], "]"}], "*", 
     RowBox[{"PEem", "[", 
      RowBox[{
      "n", ",", " ", "d", ",", " ", "A", ",", " ", "mEm", ",", " ", "th"}], 
      "]"}]}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6043376225895243`*^9, 3.6043376250269933`*^9}, {
   3.6043376715576477`*^9, 3.604337744494214*^9}, {3.604941929562543*^9, 
   3.604941948372762*^9}, 3.604942456096374*^9, {3.604946483374596*^9, 
   3.604946484021561*^9}, 3.604948654699738*^9, 3.605011550739072*^9, {
   3.60606389065761*^9, 3.60606391640761*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{
    "n_", ",", " ", "d_", ",", " ", "A_", ",", " ", "L_", ",", " ", "mAbs_", 
     ",", " ", "mEm_", ",", " ", "g_", ",", " ", "sat_", ",", " ", "th_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"Pabs", "[", 
     RowBox[{
     "d", ",", " ", "L", ",", " ", "mAbs", ",", " ", "g", ",", " ", "sat", 
      ",", " ", "th"}], "]"}], "*", 
    RowBox[{"PEemAp", "[", 
     RowBox[{"d", ",", "  ", "mEm", ",", " ", "th"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PB", "[", 
    RowBox[{
    "n_", ",", " ", "d_", ",", " ", "A_", ",", " ", "L_", ",", " ", "mAbs_", 
     ",", " ", "mEm_", ",", " ", "g_", ",", " ", "sat_", ",", " ", "th_", ",",
      " ", "B_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"PabsB", "[", 
     RowBox[{
     "d", ",", " ", "L", ",", " ", "mAbs", ",", " ", "g", ",", " ", "sat", 
      ",", " ", "th", ",", " ", "B"}], "]"}], "*", 
    RowBox[{"PEemB", "[", 
     RowBox[{
     "n", ",", " ", "d", ",", "  ", "A", ",", " ", "mEm", ",", " ", "th", ",",
       " ", "B"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.60606392200136*^9, 3.606063925141985*^9}, {
  3.6067509211666*^9, 3.60675093438535*^9}, {3.6067512129166*^9, 
  3.60675122326035*^9}, {3.6067514190416*^9, 3.60675142113535*^9}, {
  3.6067517780884748`*^9, 3.6067517790572248`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P100", "[", 
   RowBox[{
   "A_", ",", " ", "L_", ",", " ", "mAbs_", ",", " ", "mEm_", ",", " ", "g_", 
    ",", " ", "sat_", ",", " ", "th_", ",", " ", "B_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d100", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d010", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d001", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.604337884179926*^9, 3.60433792253881*^9}, {
  3.60433803581861*^9, 3.6043381360360775`*^9}, {3.604941967096554*^9, 
  3.604941984186875*^9}, {3.60675093988535*^9, 3.6067509448384748`*^9}, {
  3.6067509981666*^9, 3.6067510286197248`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P110", "[", 
   RowBox[{
   "A_", ",", " ", "L_", ",", " ", "mAbs_", ",", " ", "mEm_", ",", " ", "g_", 
    ",", " ", "sat_", ",", " ", "th_", ",", " ", "B_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d110", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d101", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", "d011", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", ",", 
     " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", " ", 
     "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d1m10", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "d01m1", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", "d10m1", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", ",", 
     " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", " ", 
     "B"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.604338342564684*^9, 3.604338403985772*^9}, {
  3.604941990189031*^9, 3.604942012410283*^9}, {3.6067509494322248`*^9, 
  3.6067509585884748`*^9}, {3.6067510337134748`*^9, 3.60675106138535*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"P111", "[", 
   RowBox[{
   "A_", ",", " ", "L_", ",", " ", "mAbs_", ",", " ", "mEm_", ",", " ", "g_", 
    ",", " ", "sat_", ",", " ", "th_", ",", " ", "B_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", "d111", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", ",", 
     " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", " ", 
     "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", " ", "dm1m11", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", 
     ",", " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", 
     " ", "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", "d1m1m1", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", ",", 
     " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", " ", 
     "B"}], "]"}], "+", 
   RowBox[{"PB", "[", 
    RowBox[{
    "n", ",", "dm11m1", ",", " ", "A", ",", " ", "L", ",", " ", "mAbs", ",", 
     " ", "mEm", ",", " ", "g", ",", " ", "sat", ",", " ", "th", ",", " ", 
     "B"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.604338458531949*^9, 3.6043384868284616`*^9}, {
  3.6043402635713444`*^9, 3.6043402802586308`*^9}, {3.604942018513994*^9, 
  3.604942031268006*^9}, {3.60675096063535*^9, 3.60675096563535*^9}, {
  3.60675106951035*^9, 3.6067510827759748`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"P111", "[", 
        RowBox[{
        "A", ",", " ", "Lcr", ",", " ", "\"\<z\>\"", ",", " ", "\"\<xy\>\"", 
         ",", " ", "s", ",", " ", "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"P111", "[", 
        RowBox[{
        "A", ",", " ", "Lcr", ",", " ", "\"\<z\>\"", ",", " ", "\"\<xy\>\"", 
         ",", " ", "s", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Thick"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"P111", "[", 
        RowBox[{
        "A", ",", " ", "Lcr", ",", " ", "\"\<xy\>\"", ",", " ", "\"\<z\>\"", 
         ",", " ", "s", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}]}], "]"}]}], "]"}], ",",
    " ", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "10", ",", " ", "50"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"B", ",", " ", "0.0", ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwlz31QywEYB/DRRGFX8tKVQ3pR6pjSmZdbVnSdUmzNra0OtWYZknJ0wlRU
JlFqXqZXXS+Ka9JIb84fiPM6ZEttlVVDsmYuOfl9f/547nPP8/3jeR6X2ER2
/FQKhbKNKKhak5bUojGyulYPpcA6uj4VZnuMn4ZXl1adhWqXAhkMdhhRQJGd
oBSWn+u6Adtkg5VkPrjrNZxreP4GlmoDe+FXvpMOdrzbZIDSt6YhGLk1YhSK
n06YIZ315C/0eviSdNaVshWthE1yBh1uKMjzh9E5XBY0SuNDYYj5MB8uD/jN
1BK2PLAPgh016Two9ZyMgpYSHyFULj5JSl9YJ4biq8/3kv3ZpSfgB5tzpEet
3M7Avafk2XAyTZsL56RZzkObnzw5bDS3kT4ZlSjIvd8rr0OTZGU5ZEqsK+Dy
Pfoq2CdaUw1L45zq4IE4LqntzvwGuK8nXAkHou6qYBu3qgXO9KMaYPEq1SC8
sCmKIdAaWV8CI9bBVKYiALozKRuhuflFEHx1jx8MzzQeDYXVd6RhMGCFmQ3/
1AdxoFvVPgFkVKpi4EGXtbGwq2SREPIWhoqh0tk+AY7KZfuhXYEgGVJowlTY
Lxs+BmnWPekwZVphBsy0xBbCzrGKy5B5sEcBdRKHcjhDZFsDm4XyWhitv3YL
hul6b5NzTUYTnKXhqGBecO5bDeGSH1w1XHR3jx6KNel90HHZ42GYJmMboVer
hwm63aSNwWLJKqqWcHxQTcquvVmqJ8x/JimDA+9F2/vwD+0+KY3uLIBWkqnR
MOhQshBetPGJh58+ra7vJ8y9tq0R3mC3foRKB4YG+m2e7ztAOFTW6AdHEuYx
odq7OAQqXWRh8NkRHw4s5GTx4JSR7P2w5NcPHezJ39EPL7uLfsP6iuoJWKS0
UD/jHkbiNFizcr09DHfSzYGtXmMLoKXQ4Ai3F8UorbqNLE8Hw33YeSG7HUpz
dz+GVFvlS3grM6EbKtL5ehg25dgAvDSZPwSPH+megH7J862phNeTem1g8/cY
GmR8482FrsYGZ+gh8nWHS+pybsND3t4NkOPFaIIZlRHtsM/V9xEMd5qugf7y
BD0U5tHMMHi24zisnmn6A5+qo0Yie2GWCXZGtm/hkpaF/pcSzSfzpJ3wH/w+
5ow=
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`B$$ = 0., $CellContext`s$$ = 10, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 10, 50}, {
      Hold[$CellContext`B$$], 0., 1.}}, Typeset`size$$ = {360., {178., 182.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$89740$$ = 0, $CellContext`B$89741$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`B$$ = 0., $CellContext`s$$ = 10}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$89740$$, 0], 
        Hold[$CellContext`B$$, $CellContext`B$89741$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        PolarPlot[
         $CellContext`P111[$CellContext`A, $CellContext`Lcr, "z", 
          "xy", $CellContext`s$$, "L", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Blue, Thick}], 
        PolarPlot[
         $CellContext`P111[$CellContext`A, $CellContext`Lcr, "z", 
          "xy", $CellContext`s$$, "S", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Red, Thick}], 
        PolarPlot[
         $CellContext`P111[$CellContext`A, $CellContext`Lcr, "xy", 
          "z", $CellContext`s$$, "S", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Green, Thick}]], 
      "Specifications" :> {{$CellContext`s$$, 10, 50}, {$CellContext`B$$, 0., 
         1.}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {237., 242.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.605458439092025*^9, 3.6067509742916*^9, {3.6067511248697248`*^9, 
   3.60675113682285*^9}, 3.60675122801035*^9, 3.6067512607759748`*^9, {
   3.6067514699947248`*^9, 3.6067515151197248`*^9}, 3.60675179544785*^9, 
   3.6067518476041*^9, 3.6067520358697248`*^9, 3.6067523375884748`*^9, 
   3.6067524552291*^9, 3.60675255607285*^9, 3.6067569303541*^9, 
   3.6067575910884748`*^9, {3.6067622136509748`*^9, 3.6067622367134748`*^9}, 
   3.6073597120956097`*^9, 3.6073617151268597`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.604406221207345*^9, 3.604406228004133*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pol100", "[", 
    RowBox[{
    "mAbs_", ",", " ", "mEm_", ",", " ", "g_", ",", " ", "sat_", ",", " ", 
     "th_", ",", " ", "B_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"P100", "[", 
       RowBox[{
       "A", ",", " ", "Lco", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}], " ", "-", 
      " ", 
      RowBox[{"P100", "[", 
       RowBox[{
       "A", ",", " ", "Lcr", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}]}], " ", 
     ")"}], "/", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"P100", "[", 
       RowBox[{
       "A", ",", " ", "Lco", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}], " ", "+", 
      " ", 
      RowBox[{"P100", "[", 
       RowBox[{
       "A", ",", " ", "Lcr", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}]}], " ", 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6044179878379803`*^9, 3.604418114117614*^9}, {
  3.604946237765456*^9, 3.604946240620734*^9}, {3.60675191182285*^9, 
  3.6067519355884748`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pol110", "[", 
    RowBox[{
    "mAbs_", ",", " ", "mEm_", ",", " ", "g_", ",", " ", "sat_", ",", " ", 
     "th_", ",", " ", "B_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"P110", "[", 
       RowBox[{
       "A", ",", " ", "Lco", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}], " ", "-", 
      " ", 
      RowBox[{"P110", "[", 
       RowBox[{
       "A", ",", " ", "Lcr", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}]}], " ", 
     ")"}], "/", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"P110", "[", 
       RowBox[{
       "A", ",", " ", "Lco", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}], " ", "+", 
      " ", 
      RowBox[{"P110", "[", 
       RowBox[{
       "A", ",", " ", "Lcr", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}]}], " ", 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6044187589999847`*^9, 3.6044187952338953`*^9}, {
  3.604946243803325*^9, 3.604946246153651*^9}, {3.6067519392916*^9, 
  3.6067519551509748`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pol111", "[", 
    RowBox[{
    "mAbs_", ",", " ", "mEm_", ",", " ", "g_", ",", " ", "sat_", ",", " ", 
     "th_", ",", " ", "B_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"P111", "[", 
       RowBox[{
       "A", ",", " ", "Lco", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}], " ", "-", 
      " ", 
      RowBox[{"P111", "[", 
       RowBox[{
       "A", ",", " ", "Lcr", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}]}], " ", 
     ")"}], "/", " ", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"P111", "[", 
       RowBox[{
       "A", ",", " ", "Lco", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}], " ", "+", 
      " ", 
      RowBox[{"P111", "[", 
       RowBox[{
       "A", ",", " ", "Lcr", ",", " ", "mAbs", ",", " ", "mEm", ",", " ", "g",
         ",", " ", "sat", ",", " ", "th", ",", " ", "B"}], "]"}]}], " ", 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.604418771937319*^9, 3.6044187889371014`*^9}, {
  3.604946249359809*^9, 3.604946251613809*^9}, {3.6067519602134748`*^9, 
  3.6067519767916*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"Pol100", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "s", ",", " ", 
         "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"Pol100", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "s", ",", " ", 
         "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Thick"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"Pol100", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "s", ",", " ", 
         "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}]}], "]"}]}], "]"}], ",",
    " ", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "0.1", ",", " ", "50"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"B", ",", " ", "0.0", ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604418125961212*^9, 3.6044181649294634`*^9}, {
  3.60675198544785*^9, 3.6067520045884748`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`B$$ = 0., $CellContext`s$$ = 0.1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 0.1, 50}, {
      Hold[$CellContext`B$$], 0., 1.}}, Typeset`size$$ = {360., {177., 180.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$89795$$ = 0, $CellContext`B$89796$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`B$$ = 0., $CellContext`s$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$89795$$, 0], 
        Hold[$CellContext`B$$, $CellContext`B$89796$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        PolarPlot[
         $CellContext`Pol100[
         "z", "z", $CellContext`s$$, "L", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Blue, Thick}], 
        PolarPlot[
         $CellContext`Pol100[
         "z", "z", $CellContext`s$$, "S", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Red, Thick}], 
        PolarPlot[
         $CellContext`Pol100[
         "z", "z", $CellContext`s$$, "S", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Green, Thick}]], 
      "Specifications" :> {{$CellContext`s$$, 0.1, 50}, {$CellContext`B$$, 0.,
          1.}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {235., 240.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.605458439529525*^9, 3.6067509750416*^9, 
  3.60675113757285*^9, 3.60675122876035*^9, 3.6067512615416*^9, 
  3.6067514701509748`*^9, 3.6067517958541*^9, 3.6067520055572248`*^9, 
  3.6067520362759748`*^9, 3.6067523379791*^9, 3.6067524556197248`*^9, 
  3.6067525564791*^9, 3.60675693076035*^9, 3.60675759151035*^9, 
  3.6073597125331097`*^9, 3.6073617155331097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol111", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "s", ",", " ", 
         "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol111", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "s", ",", " ", 
         "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Thick"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol111", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "s", ",", " ", 
         "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}]}], "]"}]}], "]"}], ",",
    " ", 
   RowBox[{"{", 
    RowBox[{"s", ",", " ", "0.1", ",", " ", "50"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"B", ",", " ", "0.0", ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.604418249334633*^9, 3.604418263725074*^9}, {
  3.604947869678597*^9, 3.604947875932654*^9}, {3.60675206776035*^9, 
  3.6067520681666*^9}, {3.6067521315884748`*^9, 3.6067521481822248`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`B$$ = 0., $CellContext`s$$ = 0.1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 0.1, 50}, {
      Hold[$CellContext`B$$], 0., 1.}}, Typeset`size$$ = {360., {113., 117.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$89851$$ = 0, $CellContext`B$89852$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`B$$ = 0., $CellContext`s$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$89851$$, 0], 
        Hold[$CellContext`B$$, $CellContext`B$89852$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[
         $CellContext`Pol111[
         "z", "z", $CellContext`s$$, "L", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Blue, Thick}], 
        Plot[
         $CellContext`Pol111[
         "z", "z", $CellContext`s$$, "S", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Red, Thick}], 
        Plot[
         $CellContext`Pol111[
         "z", "z", $CellContext`s$$, "S", 
          180 ($CellContext`x/Pi), $CellContext`B$$], {$CellContext`x, 0, 2 
          Pi}, PlotStyle -> {Green, Thick}]], 
      "Specifications" :> {{$CellContext`s$$, 0.1, 50}, {$CellContext`B$$, 0.,
          1.}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {172., 177.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.605458440467025*^9, 3.60675097576035*^9, 
  3.60675113832285*^9, 3.6067512294947248`*^9, 3.6067512622916*^9, 
  3.60675147088535*^9, 3.6067517966197248`*^9, 3.6067520369791*^9, 
  3.6067521500416*^9, 3.6067523388697248`*^9, 3.60675245732285*^9, 
  3.60675255719785*^9, 3.6067569314322248`*^9, 3.6067575922134748`*^9, 
  3.6073597132362347`*^9, 3.6073617162049847`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotSatPol100", "[", 
    RowBox[{"abs_", ",", " ", "em_", ",", " ", "B_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol100", "[", 
        RowBox[{
        "abs", ",", " ", "em", ",", " ", "10.0", ",", " ", "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol100", "[", 
        RowBox[{
        "abs", ",", " ", "em", ",", " ", "10.0", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol100", "[", 
        RowBox[{
        "em", ",", " ", "abs", ",", " ", "10.0", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick", ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}]}], "}"}]}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.604418556690074*^9, 3.604418585986574*^9}, {
   3.604418630111009*^9, 3.604418659641881*^9}, {3.60441869020399*^9, 
   3.604418690688359*^9}, 3.60441885078006*^9, {3.604418990856392*^9, 
   3.6044189929969893`*^9}, {3.604421084954587*^9, 3.6044210923763666`*^9}, {
   3.6067522690259748`*^9, 3.6067522773541*^9}, {3.6067523901509748`*^9, 
   3.6067523917291*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotSatPol110", "[", 
    RowBox[{"abs_", ",", " ", "em_", ",", " ", "s_", ",", " ", "B_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol110", "[", 
        RowBox[{
        "abs", ",", " ", "em", ",", " ", "s", ",", " ", "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol110", "[", 
        RowBox[{
        "abs", ",", " ", "em", ",", " ", "s", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol110", "[", 
        RowBox[{
        "em", ",", " ", "abs", ",", " ", "s", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6044186998444915`*^9, 3.604418712297457*^9}, 
   3.604418854170641*^9, {3.604419005137459*^9, 3.6044190075124283`*^9}, {
   3.604421097532551*^9, 3.6044211038762197`*^9}, {3.6044212461243987`*^9, 
   3.604421263842922*^9}, {3.6067522823384748`*^9, 3.6067522914947248`*^9}, {
   3.6067524030259748`*^9, 3.6067524049322248`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotSatPol111", "[", 
    RowBox[{"abs_", ",", " ", "em_", ",", " ", "s_", ",", " ", "B_"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol111", "[", 
        RowBox[{
        "abs", ",", " ", "em", ",", " ", "s", ",", " ", "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol111", "[", 
        RowBox[{
        "abs", ",", " ", "em", ",", " ", "s", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", " ", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Pol111", "[", 
        RowBox[{
        "em", ",", " ", "abs", ",", " ", "s", ",", " ", "\"\<S\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"x", "/", "Pi"}]}], ",", "B"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", 
         RowBox[{"2", "*", "Pi"}]}], "}"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.604418717703638*^9, 3.604418729094117*^9}, 
   3.6044188563581133`*^9, {3.604419011356129*^9, 3.6044190139498463`*^9}, {
   3.6044211081730394`*^9, 3.604421115860441*^9}, {3.60442232300124*^9, 
   3.6044223352198334`*^9}, {3.6067522995259748`*^9, 
   3.6067523111197248`*^9}, {3.6067524094166*^9, 3.6067524116509748`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotSatPol100", "[", 
  RowBox[{
  "\"\<z\>\"", ",", " ", "\"\<xy\>\"", ",", " ", "8.0", ",", " ", "0.0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6044216600253506`*^9, 3.604421660072225*^9}, {
   3.6044223582351637`*^9, 3.6044223609382544`*^9}, {3.6044224430153284`*^9, 
   3.604422445749668*^9}, 3.604422517342502*^9, {3.604424043276095*^9, 
   3.604424043916712*^9}, 3.604927969843057*^9, {3.604928068015433*^9, 
   3.604928085417371*^9}, {3.604930121795189*^9, 3.604930138204065*^9}, {
   3.604930510027802*^9, 3.604930531308738*^9}, {3.604930605695669*^9, 
   3.604930608304348*^9}, {3.604930639543027*^9, 3.604930640202761*^9}, {
   3.604947948403236*^9, 3.604947950516763*^9}, {3.604947998350799*^9, 
   3.604948003518473*^9}, {3.605014773890318*^9, 3.605014774359065*^9}, {
   3.6050338163621955`*^9, 3.6050338165184445`*^9}, 3.6050338830961437`*^9, {
   3.6067523237916*^9, 3.6067523247447248`*^9}, 3.6067524234166*^9, {
   3.6067525012759748`*^9, 3.6067525150416*^9}, {3.60675259282285*^9, 
   3.6067525976509748`*^9}}],

Cell[BoxData[
 RowBox[{"PlotSatPol100", "[", 
  RowBox[{"\<\"z\"\>", ",", "\<\"xy\"\>", ",", "8.`", ",", "0.`"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.6067524237134748`*^9, 3.6067524574009748`*^9, 3.6067525160572248`*^9, {
   3.60675255194785*^9, 3.60675255826035*^9}, {3.60675259807285*^9, 
   3.6067526119634748`*^9}, 3.6067569324322248`*^9, 3.6067575932447248`*^9, 
   3.6073597142674847`*^9, 3.6073617172206097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotSatPol111", "[", 
  RowBox[{
  "\"\<xy\>\"", ",", " ", "\"\<xy\>\"", ",", " ", "20", ",", " ", "0.1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.604423479658309*^9, 3.6044234801739273`*^9}, {
  3.6044241915710716`*^9, 3.604424194742906*^9}, {3.604424282601156*^9, 
  3.6044242826949053`*^9}, {3.6067523275416*^9, 3.6067523282447248`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
EOzT32ETho1rRcQ4rvpDs9/mObnoTRDRZd95+N0PVIMUT/WkbwJvqZOE9Rsf
UHhSycTesAnefwQtdaI94V5k/6NR4iY40mivaiR6QEnU5s77L5tQ4WA1+vzV
PTgRpzirO7IJJYnX5aHTHY6kVLZF7m0ChbAiEX1wAeu0fmUz6i1QVpPqUBG6
AxkZm6USzFsw8p2Ri+eZE/BnK2Z18G/Bl9yUiw+fOoBprjFP8pEtYDf2yeQ7
ZA8v3nhF35bcAvdc+1P5lbbAUVgZQKe8BfLZHSwfmG+BflH/ev/5LbgQKRei
9fEmRJVsOudqb0HPp7sPR59ZAUOl4g2NG1uAP9WK9/UzA81q4278rS2Y0+wf
5tYxhZBaL61Jxy34VxTH8FfaBCgaKxWDfbbAoC3rmgm6BvnMuJy9h1twNdWi
Zu2cARjccOb0itgCtSAH9yFzfdjJIz5citsCvYDDq8fFLsOrDaHl2ylb0PqB
4Z3BRy3QUfe1HH+9Bd/oNGVRugasxXz/bPZuC16eaK0myz8P6iee5OvVb8HS
089z5h+UYd5ngvsjcQu4P63/cmBVgvh21VC1r1tQSPCf8+6UBWVC0npt/xZo
6Awaqk2fhMlbq7fkR7dgplj50yT9cYgqvtxdOLMFYRu9VP/IDoPCQS4SW96C
BM5U6TNJfDCiQ/E+c3sLapRzicQBHIQkmx3io9gGY9No7pBQWpCaqYiIZ9gG
c7X5c2fNt1X75Nl3mDm2Ifu96nWO1xOqAY+cHEL5tmG2V+/O+6F6VdFvbX1k
R7aBNvqhr+2ZMNUuAaELPpLbEPNPf+SfQ6+qt7NP6arcNjS6q9ylfLukKlTT
K3xHZRsYxe8duehGDu20J6OnLmzD3m3nUY1RZnA1DN+31N2GzKlHUUe+EYD7
1bjzgNE2kH+lbW86IQSNSypDBpbb0Jms+e0J6SjcVn2h1Wm/DZyz2dArLwm4
yJXKC67bIPbnXzL6IA01AzrHGry3IdRoOqqKJA/WornxSkHbUHmbohdUzgCD
BzllSfg2vGArtmvmByhpvuEmEbsN7b96ZPGyamDKVvHrdfI28DcdYyliugAU
Fmy6Aq+24dCFuM0jfJrw9q3jh8S323Ds+WElOwttuLbdKs5etg25l6fFbft0
YVdDMOnJh23YqOIVDD93BXTGejz8P2+Dqs38Eo+KIaydlJrY+L4NLcyTJmrW
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
32j/E+ZBX////zP8H2FzZwo=
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJwtnHc8lf/7xzk2WYdzHCOhoRRRRIXrnVBGiLJXssmq7FVkJRkpMzsinDsZ
0cCHQiohq4xkJzs7/e7v4/H7y+P1eN/nfV/X67re97me9wOiNu76dgQaGhoS
PQ3N/37SvWX99FPulvIKbfyjqo0lxf3Tb04LJ1lB/Lt8nb2fy5U3qUdt+xPd
wcWz1/fWp8/K2Cp85S7zATND8b0bP38oj/M6rlclhsCatX3a8Md55Vj+Fvay
ujAYO8tVkNy3rvzkoHkWTVkkWNzbYXH+SQv18gvSBtl3IZpN9UmzMTMMqIc3
FiTeh5vX/L5rtnPCpsQuicDGBMg1+bCzKMwLkcd6vArqkoDF6PjpVz0U4D2V
XffpRTL8eNXg4M0uDDlnnOnXSx9BrcGlkqgfoiClIXtBtDAV0jN2jr/Z2gd1
ejvJmtnpEC800KR/+SB8tUoUz0zMAveFSiXPd0cBOy6l8LM5G7CSA3VLczLg
I5/03acxB8RCRZ6pC8gCPVjsz6nLA0+PKpvczwrQptLYKleTD9e6FF0zTE5D
grq4W9uLAvjy4WwnL50yCOssVi2XFsLCyJts6YEzMHbR0CyquAgCvuy6TLQ8
CyWX6/4JFT4Fhn7Co9xFVVCwuHNePbsEhhbFDrw6dx70XfkHUhLLgUnxMs25
cl3YpQBvH56jwhLdnU3mPj1YeOnJ/aOZCpeJxCbpkYtQ9bqn8mYjBu06RO46
pktwtjl753FdBXwr46FYVxjDgXNdetMnX4AfJfh48KIJsLYy5B2veQHpdHnf
z8qbQUe787mWF5WwIGP6tqrfAiy6ZeMXS6vB/iUn/cSrK4AMHUZPH6mBZ9X3
T5n728C+vlTZiOIasJTjXEo+fRVmvu30CRS+BMYg4rhmqy34/GwRVc2ug+7x
DyZ+3I6QsGRe8TDxLZzycbpRpe8O90hpivXs9bBr37LpQWkP6MTu7JHTrwf5
/NN6PC89wGzGfFz4Wz28PTYlcvqLJ7iZsXkuzTaAAe24d7rADXig5BiVytUE
j7zZij5y+kF/v4ELx+UmWI4VbAur9gNhb9AJS22CQ9mKzXJX/KGwjMx7TawZ
XnryY2G1AVC7pzkLyb6D/UTvu7fDg2GYVqx60qgFvE6jnvGTt2HfY/Y084wW
uHRKopop8zY4ntoI/DLSArFMlDgibRgseXWo1Dm1whKtieHghzCgHwv+FBfQ
BpOiIf92u94BiXffxuWy2kG3GbNc+RoFp5s1WVWud4B2sW9XtWg8cHU/+Syf
1AGv7xjl7DOPh7FRQrJkRQc82cVQOvwwHuJo6vbwL3dATwKHhRJ7AoyePiy3
4PUFXHjvz4b+TYCo52zWj706IeiwQKHXryToyWqv3PTshmglpmzmtUfg4a9z
pcKjD4Y4035Ga2eDpptiEXN8H5QESfcbuWfDXhuJeYvyPtAm6SRLJWZDjwZj
EPNcHwR4/DVe6c0GJf43KRYu/fA6U+pt59UcYK2R7GCyH4C7nvWXHAJzoeDP
LjA3+w6fOJsKUWk+BE9v3sH8v0Pr1oOBfR35YDw41c6Yhq+f+r5As5wPu5qb
TLG+73Cf5J/2WKEAvB4EejMaDgLtF84M6/8KAB2fLaXqDcHUue/14T1P4FqN
XRxh7whsuIZa3Zwvws/zRRFa2REIDQgTZ+d5Cgv9is//qY6AVt81LOLEU7ix
xdOzbT8CxqX/zggFPQV/5cbda8UjQHO5aew1czFENAmX/jr2AxwdYx4j/hLI
7uj90K0yCgncNknhAqVgc+U/iy6DUdgfs/6L9mQp7F0qm/9iOwrKlSO3tYxK
4QlPBM/niFEIaCb9REmlUGooa9baNgrLSZThXOYyqP0eP/Na/ydUvXl7snaq
DAKvBQa+uvoTmju+nsHoykFpx4Gj7sZP2P5696OzcDnU74FjNQ9/wiLdr717
Dcrhvc1vv+cDP0FQBFtLeVkO3VMaLIU2Y5Dp5HCSU4kK86kH1cK8xuBRyaRD
Hf4cYNViumV1ewwORiBODX0qoNKmdb7cMWAcv7/B5ECFEk+YivoxBp675jCO
+1R4Jya8z25xDAL2jFEaUqgw0rVtdYZ2HOzpeh0NcqlAPlHbuyEyDmM5mox8
lVS4vSn73tl6HFiOjx8i9VMhs4SH7pzHOCgU6r1v+EGFGvMl5b2h43C/iDyq
PUOF32/Kq75ljcMv0TPjfzepYBwm8UR7eBxSrWvT3wlgcHSXyB0pywnQC/cu
7TDAQPP1Tj2r2wQohFG99U0xsHUb3J4ImgDlW5gF1RqDtI60G1mZE2B8xoGe
5hoGjMkkW67BCbCfFTT6FYaBqPpK1uzsBMi/Qs80ozFQXOv81rI9AT8bSNJ3
4jDwNIk3uCU0CdWlr03upmDwfTfb2SWzSfi6wuzTX4zB2qfp4E8uk+D5rSKY
sxwDYmhLbXHAJLASu5b3VGBwfvTOsavpk3Ctpa3rcy0GV5Ns3aBkEvg/SvG5
v8EgWPVssWDdJGQG7/GbasCg4gmNWPfAJBzQotF3asHgk9GwBXVmEmyrQws9
PmAwxfwmNXZzEgqSyvsufsKArjbjqyPrFHgcqOvZ9QUDYZcAbjWBKSCQk5Ny
ujA4KWR6QVRiCr7+WKLl6sHg0keF6L8np4DfUIdk3IdBzNFVmiqTKZh0eb19
4zsG/j4ahyecpyDtwPwp9yEMnN5mXCYHTsFjjaBTiiMYGDMthKjfmwI6l5CF
bz/w/HTPFns/ngKrOWEDnZ8YKDx62P2kfAruOD0ySRrD4ODw9E5P/RRw7ZzY
Lh7HgCKudIipcwrEiyxlkycwYHKPN5D/OQU3b9/evjiJwWrVzyCHlSmo2jmk
9wPXEzsnih4xTEMuz8Lhs1MY9KjHdL4nT8NLq7B7Prh+Fze4vSY+DVvoyfVg
XFf1SIsfPDkNmT+khoxwXSAcftFYcxpaTjJ9osP1A/vegCizaSAzSqrdxvcP
L5N4UuM6DSYVmHoXHs+N1aCOqaBpWFau7VnF472q/GWTcn8asF0hm7N4PvoR
+/ZrZOPrVK2aSjxflU8+un7YNCRTg/kujmJwjPzB72njNEjIRYu8xf0SsxTO
7++aho2que//cD+JTzw/sYxPg0e6qhHPIAa0c03rJ1fx/Vpk0jcGMFiQo+x1
ZpoBdmm3yud4fUaCXC6kUWbgukZjhTJev47mNz5th2bAOZqxIBOvbz07MXfz
1Azotoilfu7AgHrZrl1CewaGs9lzuj9ikJVZs2pqga//9+HTsza83ySttOpC
ZuDCK/J0z38YuN18fvNX/AyYv5zdOViPgcVrhmzB3BmwKz5wT+cVfh4uPFsJ
aJqBW58+evC+wOBI8j/hZ19n4DLWvfYC73ehQX2N7xMzQLvsYXqoBIMt141M
RZZf4C4yJRKXg8HMC+0WV4Ff0Lh1701wBgYD21lLGYd/AdZhXnL2EQa1sern
/l74BQzP9i9qxmLg+yxp4XXiL8jfYPiufwMDx5UJgbm8X7BTH5I2jZ9fI8VT
asKVv+DyS9W3lx0wONE+khrc+wtWlD72l5lgsPJL8iwIzYLcwT8Djor4+T3c
klxfMAvt3eIWe/HnyZjdWGh21Szs6ATp6S5SwTCbxjX0/Sw87XywfWmKCqdI
J1XQ9Czcu+yvNfeVCoR/T+feHvkNzKkjEZblVEjsvHvubcVv+LEcwGBvRgV6
9qJjWU2/QerTPPs5PSp4n2vaHfL1NxwN5zBmUKOC6avtZeW137Ada/VMQIoK
Yk+uZb85NQc/L9KUW/4th+d+uhuvG+ag9D8CdvN4Oex74TKW2TkHa5en3Hfz
l8PDucjPQT/nwL+GRzBqpwz8r9YXKDHMQw+0+Ba1lIHKBRn91+fnIeE0Plia
lkGXCE/Jq8/zEL/ObpLkVQqbV13KBt0WwJIs/DE6qASsuZd9X3kvQNF9qZg5
yxJofuN/Nj14Adhc75w9ikognj+mzzhuAYJURz+rE0pA/HMRobt0AZrSv9sO
hhfjc8yEYdvsAoRPZxwVC38KZVxX/lU5L0KqEu3uMbdCsHltqBdvvwSzi7LN
Drx5cKyKQuR3X4LYtKhz4nO5QCgf6MrxWQIZqtTy+PtcyM22NKqIWgJDJ9Y7
VwNyYTTM3rKneAmCLtzDvEZzwEbT21Vofgm0C31zfbFssOlNjiryWYbhT1Y3
Isoz4FiHkaZM6DJozQiv29llAKGVf1dt1DJ8Obpaf00wA3JrM+9/SF2G4rIV
9q3IdBjNLHg4V7cMUia5L6WupoGNbWW+LM0KmH3Aihn3psDVxe76+qgVKJC5
FRXTkQTW/vFGNfEr8ONIZteBxCQwp9OeK09ZgaDbFb8YLiWBIek/wayiFZjZ
8Ry635cI509i3kEtK/CBaYl+ZiwBpG7dO3KK+Q9EaXdkurLFwzqXekpF5B/g
Uhsa4peIhpVU2qMl9/9A/K/VFWJDFCyKvW7OffQH+rRzRRuNo2BGVnY5ofAP
DH5p5TofEwmDxmI6Hu//AN144Sh59Q40Zu/QSTKt4nWfK/y2eBtipavdn0Ss
Qv2lKJdw+gBoO9Y7cTMO12p7x746+AOz3JqF2sNV2BN8yKa93Q/CT8prjxWs
gox6bll5ui8EqFQfFGtehdZ3dqRbF7zB+VL1j0y6NQiM7TFpJXhBkWGv8TW2
NTgb/Uj55C1PmDBe+6zIswaSVOsiR1pPuGIh/+ab2Bo4jclOszF5gLF9dRq/
yhrcHKds8Om6wjnfaoPk0DX4OjUhrxxkB+H+vW22UWtwsU33tVGFLTQGrp2R
jV+D5BQZeYHfV/HvcXnprqw1YJMK3cl1sYETMdW7uN+uAbtsix6NhBXciO0N
G3m3BuETn/pOf7GA53Frm+Wf1uD68vTITIg5SCbJT+sMrUF9B+2j58smsC+j
ujn27xqsrda8uyB3GWwe9yqaM6wDha2HfJdyCbKz1yoOs68D1WtnwYjOAIQK
5HPbhNZhRTgx99m8HpgWGvGn7VsHpgHBsRujupDy1Cfe6cg6BMhe83m/cgF4
yqqDmRXXYYiR/rr4OU3Qo/b+6T27DjmyKo4QeR7inq+5Fmqtg3R8u0tejzqw
VsubqZutA9/J659t8s7C+ZdGnaSr69A25GHyXkQFIup8NMad1yHPPlgtphQB
ob5aPtx/HX4EvbX0mTkNxezEJ39vr0OU6XzkPYmToG/myutzdx0ylgec1+NO
wGbRu9sLSevgdjWzvZ5PFvJWRRadMtahOs1oba5JBrRVA6x+5q/DcMHVGyTJ
o7CS8PWjeek6tNa+7DzBfxhUJWOKdd+sw8s/J367tu+FWf8xSuu7deiHuCNp
SSLwoEU5UuUzfr99fclN5wRBkZz6p653HZx6jdUfb5Jg/OryVbmRdaigPJDt
Am6Iwy50lk2tQ9mb0KAJKVY48a8QHVxcB5tD1DIKHR0MaRPKczbWYWTGg7d4
fUM5Is18tyBhAzx/m8ZayS0oS01V3X3AugFV9ZP0474/lHvkuDfZeTag4B23
xIh7u3JwmItjpOAG9D8tiS87U6As/qW5h2bfBjx//ffELaqHcoewiJr/kQ1Y
HV3u8xJ+pezr6l+xLLsBRSussuWrPcoitd2i15Q2wKz1DvMo05RyC9PR+Am1
DehCp1tzHqwoe1yO3rHS2QAdkV1Xc9z/KVPyfrr2G26AWAWh0k6TEeoXlL7p
W22A9nTHzw1aDnBSTtFod8DjQ49LT7rzADF2qVrNYwPWH8ZJD7hToLZf+8Bb
3w3o8Z/EPhKEwUa88IHCrQ3Ih7tvaHjFgPUmLd3z6A3YrT3qS3XfD88bzTwP
J26Alut0gzPvITDlqhrOT9sA6nCxxV6CJBAsuXSE8zbgmPy+e/YZ0lBS4vzq
UckGXAranjzy/Rhc2miS4H6xAXmMYdIWSA621fekxrzaAKOEMfP5FnnQHu26
GfQR1/xsXeRzSrByVGps9esGXLAR+6ItjCAjKErfY2gDVAb3UI+UnIHfFKWj
V+fx/TlOVR7bUoU43SdT57k3oSnoflzVdW04kUlj1Mi/CfQpF4jtwTowNGPa
fFpsE/QvkFsmL+jB0QjOXKnjm3APc/3acEcfOl75mvFe3oTcUZZMW2sj8GXt
ar1nsQkj7Z33FEuNQcRYUoHJfhOcMY3YXwRT8Fj+wbvpvQmu7+Y8X7WYA7eE
1qfhlE0oo1fEvlhegQmmLO6W7E34fp7ueI2ADdSOL12iFm3Ck1Dld/YDNmCb
k/YttAaPDzFJ8tjZQg1lZkq0bxPC+q41OhQ6gCVTNJ0t3xYcxaS2Pw+6wfHx
7+rae7ZA/urzHuJXd2D+TzpGVnwLNN9/u7Tp4AHPg/u4GOS3YO++8FJVR09g
WBUXfmK4BR9aHAv0gq/Ds7F3ClPJWxDrKc73fccHbjUKBHZkbgHN899y1Q99
8XnE7W1NwRa4aUR4npP2Axpzsnp05RbcTdv+FuLoDwZddgYSX7dgxEQ4TPB3
IGw20Lu58m5DctfXvByxW3A+SyVvIXEbrjr6fxTnjoTIlo7B2+nbcLwnHOaD
I+HdoiWFlL8N4X6yx+J+R4KaasC9k5XbQNJd4NT+GAUq0xU+t3u3oeZiOVfq
wxhQPL5fm1foLyyWqWSv6sSB9HumP/IFf6FiYo28ui8J+Obb1UOqd+CC/Bkx
7q10SHtfS0vnRIOoCgxRubr/e29F9Zt3pUGsbrTeDzwL4dzmk8VvHjTotFB3
0PWkQlg5kvTjhS8NYt/pz1/tKQSdRJcG+yga9Erdp5fWoggIFkK32gppkFKJ
gwrV9im4LAXRJE7QoKSw8zwp+PzSyHbDN3iGBkkENjHsxucbyn7nBec5GmQY
s5IXlF4C74wMR86u0qBbs6T3n3tLQOS1VP0fBlpU5/VgvUjnGXRHDoeY7KdF
FW+5aOpkS0Fx95l/Ira0SLwz7FPfUBmcN+/2snGkRd/sb8QtbpTBpXSHiTxX
WhQjd6OrnbccXPjjPh64SYt6GKUyWjTKIY30Lf1IBC3a3BCVbaaWwzr7TQWF
Ilpkc6rJ/PBJfF68wPzM7xktGhpXulqsSgWu2PQ9dVRahFgc9Bjx+VGctZFR
+SUtalwyGjKwx+dTRs6vZ9to0bvBXb+VE6jwYqfIU3cWv/6HmKXICBXqlRTH
4xdo0ZElSZWL01RoD/xs3LlCi64+8LE2W6LCz80/cPkvLZIhTAds0uH8sabC
YcZBQCfya0st9+O8eKLnVgaRgDjkIgYNJDGQuOn0Z5BMQERCwWsROQzOLN//
br2HgESUjw0gVQw85r8X20sTUOi0X3MyzteBUh7CRbIE9FDm9fOz+DwedY0u
cVqBgBaaZXfe4/N61q9Dfq5nCOhNwiqfgT8GxRKvZ0vVCKg7syzDJBTnNSc9
63kNAtpw9JuVi8B5d9L7nJc+Ac16+Nu6J+C8cIC1rsIQ37+yWLP9IQbjdplS
f0wJqPnCmM9OOgbbP/8j+V4lIDr3NcnRAgwOj3CNBd0gIC2/4tm8agx0JkUa
vX0JiDL8q9m2Do9/TjrbPZCAvuV/LP6H8/eLbT3zK+EEVD0zdOG/Zpwv6a6c
Mo0ioNV7EtO/cP5eZ/WkGMQSkDeDnuYczt+K/Andqg/w+/e/EwnFedtSJOe5
UgoB8bXr+3F2YxAqjsWfyCCggmopS1+c13KlGtyOZhMQch9vrMV5rknui/bB
fAKS23if3oPz3oTiDwnRIgIi//k9+AHnb2bVRWaBZwTUsikXkobzooQW7SSR
SkC/ltS8VXCe1NbnbmZ7QUBBjndr/8P5281ENI++hoAyu06rCuM8Gm8tc+tv
HQFVDF7apY/z6nOHM1arbwnov8cZu6xwnu12u6g0/x8BtXflgBrOu6s3rwhO
vScgJY5X2fQ4D1OCPDdGPhDQn+9sRzJxfSr8Vm//ZwISm/Mf4sD52fxuQmVn
FwGJSryqNMF1cGJO0odeAqp5r0UNwnV2KubZ9I2ArEzcP/rjujG7Qff1MAGl
d8mxX8T1WOEXyaqfBOQZ6+NBg2vG8h9s5ZMEdES2Zz0Kv9/BqsXpwl8E1Pfu
VdHMxP/e79C2ZM8TEL+PVdh+XLs2cT9JXSYgu8S62JN4PnEfRMMT1/B+snjU
egDPl9opY3N3i4Buzt6C3ziPd/afQeH/8HrMda7E4n6tjFwUDqKjQ4X+xQsM
uJ/kqSvbN5nokN6nhVPGuN8K854Dbmx06A+L4fcwvB6BfxMeWvPQoaMme7Uc
8Po9ps+9YcJHhxwudEjuwetbz/ZcX1+QDgXL7E+k4jxOL9DJobqXDqV+7iFa
f8LggOjorKI4HUq0fqoZjPfP+YNLbXKH8fVsjtPeeH/FniBGih+nQyOG8+HL
DRiUKYnZicjToXflBBo/vD87VI+d5T9Nh8RNe737ajHgNdD/x3qWDoWk6OTt
r8D519RmkO4cHZ5vSigPzuPGV7zqtjXp0HbdUtG3Ygwy3BN95vTpUNyHK8e2
cB5/4517edKQDn3V5G/Qz/zf+4Xnx0dM6ZCP4t7V8BQM9sV2zn+xoUOH/e9X
+cVhUFpEdKz0okMroWc8C30xCP/69gydDx1aTioimHjh/UC4JngxgA49cv1e
N+yCAav5+0+zYXQotnnizDVLDOw5A+X2JdMhmz88lHtnMFBSPMTplUqHNnri
zWdP4vk49Uy9zaRDzEISAmLHMPivUTrD7AkdMso6UscthoGI9zghqZoOvZlv
HGGkwWAtN/H7SB2eH9P88T1rVPj0Gaqk6unQ55zHsZxzVAg6lObU1kKHis4G
7ff7RoWB7zodtAN0qGEojMH7BRUenK3J9NimQ2d/H6/UsKKCi4edzxsaenSA
qKjx14AKKpnEi7sY6NHxfzGZseepsLjqSl/ETo9mX9fG49AKOsWiLsPC9Oge
lyf7Dg0VmLnvKuicoUffYkK25GTLIXDIoutwBD3i9LMub3IqhZVzSpl2MfSI
Gnmzv0mrFFwxIYesOHq036XQNUGyFMzCv20SH9GjM7JndBMXnsEpCROxzUJ6
NOA890L1xjPYuHnJs6WVHp3CKK+3vErAm12L046dAd0NhVQd/afgqaig9fgB
A7rkJ1OU8CYfaNwehNxPYUBW+lsK7un5EJe1UBGawYBqu77aq/nmQzHhqdDV
fAakOfT986BMPoy28M+Jv2BAXJdC1T/l58Gly1vxWBcD6pZkDzwYkwsn3N70
NBEZUckb6IoyzIamLAG2KjIj2u55bxR5PBv0v3hDoQAjOqWTnnOfKxvcZI8W
RYsxon8VCvtCkrOgcDPLT+cYI0rjt75oGPIYKJG3hPouMiJaBh+/s8YZsJml
avMrnhG9/KAdPrc/BZTXlBJlkhnRLhb6iMahR3BLR77RJ5URWSdWr3959AiY
/x4So89lRA9qvBoLWR8ByZRzVKiCEcmO5N3RWU4Gad6BKzpf8f01i7VCvySB
XZT7FYyfCXGH/ZdcmnAfioYdE9Z2MyGGS+8mLcn3YfaETYOSGBNqpHo+a02P
A6/xS6JtEkxoy/S/+c6iexCqcurH6GkmVMV34fTkh7uQtk1/hdeSCQkLad3M
kY+CDo80a59cJnTe43vPFPUWSMRzbd14woRSaW77+BnegrDyiGSvYlwXOPX0
bYfCiTmvtmvPmRDd1UcqzNqhkOmiJWvbyIQKBWqfxU8FgbP9NtPFUSbkfWD2
ovuALzTd8crVmWBCRxuucTkgX9hdMKWoPcOEZmoyZXYX+UDHz27Pc0tMSHWX
IV17oDfIXyn9pkRgRjbJ7Xb2p28AvblluYQYM1K+cMeRg9MDLAO6NQ4eYEbr
ckI/Ava64xyoObZfghlpuJzwu3fEDZz7T/CLHmNGpuHn2Lo1XOGLIWcYnwoz
it33IlkZcwQJ7zu7SerM6OSzGP7b3Q4QnrxVTdRkRlnPTILjtuxBoXtyll2f
GUV9tJfZddkOHl+sN6S3YUZNExvhI3I2sO5xYpHWnhmNFrCVUn2ugH78s7v/
nJiRe7gls8Vra2D4nFK/6cmMYi6/l39SZAmu2p4Si7eYUZ+BefvQFRN45zLZ
NHeHGc11ppjU7DWGPXctrGajmRG6dGLM+bchdLZqPJhMYEb71dY9nFIuwclz
YjuDOczoQ05CyhGcN2Tz2qLeFzCjH5s6nqee6IDUPy8e7Ckz2k1O1bNt0Aax
6v8OhmPMiHY3e0Lhfg0Q4nGtuFbJjCSOY5c+uJ0DsjuvstFLZnRtr1Og9ns1
YBPH5/EGZnSlQOmL3xMVYAxjH+JpZkbCIke2pCTPAM1wpePfFjyfwicMhREA
Kw8Zgzs6mFHzkq/Xn9OnYG6pjLm2mxmF9nvtsDTLw5SOUVJeHzMak23PFbwm
B4OMRUXeI8xoIFGvVk9ABvps9I5bjzGjHc1WUVqQgs436681pphRB8H4Xmyk
BLQL5Jw/PsuMpngGzXQ4xOGdt0aX0AIzYtwjFaLXtRfqOxctGFeYkfWcw4mM
HhGolUqbml9jRmuKI4I3pIXgRYzK9f4tZuQ3N/vmqjQflE/M/G38x4xchWbz
SKVEKFZJinpGx4JuNwzYS15gh/zHp3keMrEgsaETP8ZOMsLjzZ+ZIWwsiEcu
cMlOhAZSDGMPOnGyIPkPi+Rw2lXlxOeyFfo8LIj76ez5Pa6/lGM5BpUU+VgQ
/9d8Ln7/QeUI5zst+wVZ0I5308uO3vfKt95JGnDuYUGEuyuH/7jlKAeK9Qyu
i7Ggg2G50wsMHsrewcGOowdYkL2u1C/bmBplj4EDyx8kWNBMwWMF/a9dys4n
PgdVSrGgCwn32tifjSnbJvowZx1jQRc/pq+UFi8qW87tSYo6wYICX8B72eVN
ZWPNlt1ep1jQbK+TUz0fHRg88SgyU2ZB+mfebNWUs4AOgf+4mgoLqglcy6rJ
5oLzlg2vpdRZ0HF2tRanCV5QqXU6T9FkQXSUkjc/i/hBkUzsotVhQf/tLhyn
TAnDCa9ai18XWVCyrvjuvxfFQPqTzVT3ZRZ0wOBA8Wm3/bA/ouJvoQULOiM+
szv4yhEQGTWLSrjCgsxeX+GUF5IGAWV6ngA7FtTAJi/YeOAYcKxeOqhzjQV5
fBBP2Ug5Acz6f5/Le7KgWjlTrVSak0AoK1ASvcmCqCGiccciT8Oa3ar+SiAL
en60Sj7NF8FSw+PBwVAW9IE2oFF95gzM7j7n+D6cBZmc54y1djkLI18fBaXF
sqDlmL/2benq0Kp2sghlsKCnllNnl19cAN/3wVIh2SxowGhghLFdFw5qNL14
nY/736dEjd7Ugwht3YZTpfh6zY9XgcoGoGpgNyD7hgW5Zj3tjJMxhpXuYuvr
jSzo/iGhj3HhJpBnuDCBvWNBTGH37ziPmALBNGBZ6jML+uEAMbnPLaDeOmHX
oRG83gb7W9RGroDHaE+iwxhev6uJoQvPbGCPrRD/kykW9PYDw/BK0FUIdijc
v3eRBanePKr174gdKLq9Vt5NYEULC85PW944QnXAtAf3PlZ0x8HCT9bIA+z/
Sq3pHmRFajWneR4PewA55EZQ3BFW1Fij5ivg7Ak3bv+LZpNjRVduMPGo3vGC
Y9GkPAZ1VlToHjy2t/sGlD0883XDgRXFdeQ4nuv0A0tKpJmCKyuSbE16PePv
D+xp7T+8PVjRymi8QMj+AHDNNJpb9mVFduN73DxDA0Ei/xrTXDQrGnf0M1K4
EAIFWOrJ0RJW9E+H4SZr9m1w3jKT6CtnRS6/GfUKtm+DtJqw4KcKViRBSMli
NA2DV3252y/rWNFGuvMWH184dP0reZvwgRV9OTKZeSntDtDqvFE784sVvT5n
ML23KQosZkYvZkuwIfXzbXbr6feBtPeIs+VTNmSmHLskfucRxCfeNXxayobu
jXpcMGp/BKyEXyorGBtyTeOcaeRJAZofTwVjatnQ0ch60MxLgdnH4h8rP7Ch
b1mWdutNqdAksFeafY4N7a5VpjZzZ8ANosBq3bFdqDfnMsjbZkMnLfNt/le7
0Cq1v5xeugDmSlMt9ep3IVO5I3ddLhcAi+nh05FNuxAQJx+98y8A9FxnZaV9
F+qjd481bC6AMptk+47BXWj/w7GWNpMncPc/Ma3If7tQhJilo0tIIajeUeL9
o8KOEh/dKGmseQrWMp8XDp9jR7G/j781//YUAgatP9posaP+gveSX/8+hedy
4REdBuyIWTXSyVKlGEQm2tZLbNnR7Ofg+LetxbCtbjxoE8GO+M6u3xH/UgKV
zNefdLSyI30bjPPf61KYCLz1+81HdtStZlkp0V8KlMX7sqVf2NFey8HD4iul
ENj/rDG6nx3xeCw/ij9UBqrFE0Mq0+zIqTFjhi+xDDq1TPkqmTmQ/c7dxjiT
cqCvd7TM28WBcp4F2cV5lsMJWZ+CBC4OtKR728oouhzShB4cd6NwoNj05eSz
NeVw5fdHXfGDHIg3YeDGKxYqLMSdiUo9x4Gq5r7HBOLzrhid3udILQ50NlQ6
rdSJCpd8LMneuhxIO/8zff11KtRYBeTrG3Gg1Eb+Q1GRVAiRrqxnc+BAgbn1
PtmlVKDm/8e06cyBboW/FO+tosIopVNnyo0DTZpq1/1+SwV12vnvTd4cSGJp
4tvLL1Tg6Dy4ERTBgah3MI3WZSogdXnkGsOBxG9eNNncooJXrVqkaRwHuvJ+
aZ2FHufvXBuS/EMOJC1Uo9HEg0Hm9QyZhQIORDY6upMt87/3A8W+Q085kHx3
pGGjAgY05i/ftpdyoOd9f7kbAANb1Z4LTys5UOXRbnHDCxgcIXE52zRzIEHS
A4lv9hjwlNc9K2jlQF0nkt7bXsNg87zD/NRHDvQlwiCg6ToGLYFvbrj3cKA/
ExyJDKEYlJOdq58P4PF/HH42cQeDh1TS5p8hfD9dEZ3Mu/j9xlxDAic5EHGO
+DjmIQZawZTGt784UPGC0q6GdAyOUZro6RY4kP+X9pD2bDxebcGY6HUO1O5f
RWOD81lmReuDhyycaJ5jv214Hc5XF2729rNzIu1SzkWrtzjvTooI7CZyov9y
tKic/+E8LuiblSfAic6o7XP/1YqBaOXe0QlhTnSMc0eN7yMGzLqf90ns5USU
7fy/5A7cz9sHiqmHOZHPIKE14SsGr4U6Z5ePcqI/6kKvduE8m18VdFReFr+e
vlXHbACDu3qHvPwVOJG3itb1IJx/vWa6X7xW5ERJG7NC13E+NgkPXaM5w4n6
nGnQ/34fAAkfOaWqxolaH4586cP5WrymNzBSgxMJFy22nP+JAYd+2Nu2C5zo
zqUcoVicz//8kiJw6HOi58ccmnNxfv9+Z0D1oiEnSmFsfhWL8/1/eyIiH5hy
oluEc381JjEofinT1muJ57cTdnsA1wkGg7sEr3Ki43m7NZSnMPD9HaVr6cCJ
2O/X69zEtVWkbGKOCyeydN6XGIJrddGR7jF3TiS4ysZjgWvJurt8B29wImYO
tU52XPNeljd18eVEu7KLviTg+2/NjWaUBXKis2kCvNN4PKNRccOLoZzI62N0
Jg+uW8VOicnd4UTXmue9uPH4qa/GbX2jORHxkV7aKJ7vI8OEwrp7eD55tQKR
oxgELyjO7CRwItOL6ts7uF92MVNHVB5yovRa0nnNYQy09z1wv5PGiawuXmJ2
GsTg+Bt43vKYE530O3He7BsGAsa/VtjyOFEpeYNHtB8D2qWH8rqFnIiG94dv
bQ8GU3dV/BNLOJHG91N3xLsxqHqb+o/yghO5PHzUGfgJ7y8TNRXzGk5UmWcg
Z/cB76/lhfCsV5yI8crSbdEWDPTFz7MeaOZEl+2CJckNGJxsWNZ2auVENlvq
L3Re4/xtlnX/2Uc8P+VCP7OXGMzHrfIe7+FE6iOrwktUDGYXhBslBzhRpwtz
cOszDGb0z7kfHOJE5Kh07oAiDMbIKa27JzhRcNj80WtZGAw8PhnMvMqJhuuK
Ju7j56ePxuYw3SYn+kHtu3U6AoOvNjF9f/9yIueivZRG/Pw5Jl1L3SBwIYlo
lULrmxjYGL1ZnmPlQiH95vET5hhcidLXnN3FhXTLCeiaIQbWLyeypzm4kH7y
m+HPuhhYCHLqjBG50A9Mx+eQCgbGw1ZF/QJcyG+LbkxmPwYXHGgtmiS4EMtj
uY6aMSpopyRXNBzhQksjql84v1NBs/UQ61spLnT7puBRtS4qnD+sX/3yGBeq
Zqt8rtVABZX5XO7yU1zISzSxpz2dCgo+qu9SNbnQdKqRXasmFeSL+oQeaXOh
4ugHp4UQFU70u15/oMOF3I2jffXkqHD8dLLIfX18v4Qr2xZ7qDiPjPuHm3Kh
kcuxZw6MlcPeyMij7s5cyFlRRllqXzl49cgG27hyoS/SM4YVbOVQv3+0/bIb
FyJHu9+kXy4DyyZFZ0UvLtTu2hC3q6EM0miX8ln8udDNgIKpetMyIAaaC+RH
c6HluwogdqcUCJ4yDP1FXKi2pvTPwZclMGr6bUBlkgvVFWW+nqothPPjXRuV
btwop7fHQasqA4IOxwWUe3AjsStHiko8M+C55/m/RV7cyHqP7CkpyQwQ3HlF
k+HNjUTKz55+nJ8Oc+QnTLeDudGjfdc+qSanwYPzviSdOG7UNKObeSs4BUZK
hGQmSrnRxd8TdBI+D4C01PN8uJwbKWwH8uQrPABNhQTZfowbRWZPJFhsJkFF
E4NCeyU36mePlUoMToKIwTnl56+5keKi4CQlJhGOcDZoB3/kRhI38ih6ZfHg
62XnSP7NjZ5MCr8IvBIDUVpzDqfmudHn4HsR7nPR8Gifj4PlIjdqv9RzXDow
Gqp6ouyf/OFGS/e//RBNi4LlU89sT+xwo6wGLeY/wxHgRrdsbchJRCv/NZU1
PAiDoO8B1v7cRPQh8yD95aNhEFtJb/2Yh4hknl0L/tx2G0ocyFYTfEQ0rOtU
EkJ/G6Y+nLTwFiGiCdaT91duh8LVB6EmD2WI6PTWZnyDaQB4XWMxqT1ORPe0
1z/wlfnDbfVE4yE5Iiq11mJ1oPOH7PU8owOniOiy+v1DmxW+MGT+/nKVChH1
7Q21lpX0ht9yepcHVInoV0i32YP4m7DN0X9pR52IQrltXv37cwMEG2YM1LWI
qNvWRZ32/XUw3s+h32NARMcDLsxP3/IEx52HFzcvE9GqzbXXw388wKd3z0Vh
Yzy+OFODRRcPeBgto2dvTkQCGWXDQ6/coOv3JZ1VWyKqzfpQRap1Bp2qdE2y
NxGF8XRfDQm/Co7LNv9IvkRUV8KIrN/aQJi0xAuSPxHpagnNCu1cgZrimt2k
YCLKcZTrORZpDWJZXxd4Iojohqypm1C8GSh+zyjgiSKiNLkGE7KqKRjx25ry
xBCRxNrK8vQ/Y4hNWvqPGEdEhYJLrpL3DWE1kvMR90Micq/jK4jZpQ9czT1a
3ClEZMh8bbz6nx4cJjym4U4jIpHpzeTKP7pgHXjEmesxER2ey7oqSNQG/5fL
wlzZRER76izlnIImJK/WdnHmEtG+YxkBN93OQ5uHhhLnEyL6snUjbZ5VDcZK
uZY4ioiI7r7QbTXPs/BvpvcJRzERad5v83g+eQZk7ey5OMqISNmnV/09izLo
5Eo2s1OJyOuemuAVo9PgNLzix/4cr8fJzodazQrw2CTs564qIjKg15uVJshC
zUPNlF01RDSQc4Dp1BcZ6OrivrCrFu+Po53J1reOwhxXP+2uV0QkKT/Scjzn
MDDrZFexvSGirR+ayhu0B0HsroMLWz0RHaKytNXl7QOlFikRtkYi4rx2MuhO
hCgYM6x2szYRkdR/itpvL+0GL5XX0azv8M8raWUXCFMgNiRcmbWFiKJftUd+
dOaBwldayyxtRNTAEycU48UBjRvEIpZ2vB+/Hbsuw8sE308MmLN8IiK5ub88
hbU0sHo9h5ulg4gq9qtMbX1YVebGHN8xd+L1ipVe5TOZVT4ydzSAuZuI+FIi
fazNh5TVD68dZe4hIqPfF15lWbQoWzu+GWPqw/3YeMmVdyFHOaDgTirTABHt
r6QMbGpeV344qq3D9J2IWNQiRBdsccjYw0vHNIT3o2fc7y/sX5XbzL9VM47g
+2l1nbrydVx5PDXXlXGUiChkx6il9CVlml4nUcYxIjpJs1d9r9G2sgCvTA/D
BB4Py/IYkYMeZC+uxzBMEdF7VWVflz+soBv3FhhmiCjAktX6Pw9ucP4QsUI/
i9fD9FDMgWkShDPrPKWfw89TaNPIl58C8FiNZEm/QESju5VVzKRF4OXt70T6
JSIaer6XefToXpjbdg6kW8XziX9nxLx0CEyMtQ5trBHRPx/Hh6QcSWiqONwz
t0FEb/m9llTfS0Oq8+zRgb9ElFejN6NIlAP6d+3fP/8jIr2KChs3e3lwEy2N
bqblQU+FI57X9p8E1b5rP6kMPGgAKjUidwOUH9eJf8LEg0zFLshuryIQuC+l
lMHCgyae7zBWuKnAgtr8w0h2HlSU7WoZE6sG6RUempYkHvTuIsXQ8pY2MHJe
XDPg40HXi7TqmO10wMNZJl+Dnwc9cW3XYziih89bS39ld/Og0602Qv/k9GEp
7jrGtp8HXZv63R1UYIjzpoElrTgParrVJmfRbQQtarJsawd58H77cekzqwlk
bq/Yjh7hQd4hqdkWcWZw3tmb8lKWBxm9MxAb9LGGimbD5rITPMimvY7BVvIK
CIvKe+Ur8CCNaqXV/IkrsNy79uG+Ig+SrLoTom17FfffL8RelQc1z3KcXblr
DysigRM8l3hQ1Z4cvsSYa2AVaJ7EYsiDekiZj/L83aCtVxH9M+JBUR0EjvNu
7pAV9zd1xowHnbu5/9weqgdobgdfaLjKg7K2FIXOV3tBTu+tF27XcX+0Gkis
/D4w0Sw9HHeTBynKhTnHv/SBIy+GWcp9cH+EX8rzmPtCVbyS1XwADzq6/5ks
Q6EftGtssHiE86DU8eYek0uBsF7nYeWZzIN4n7Hn6zPcAp1sK9Yb1TzoCnHC
7KFTJDyI45B78BJffzQRcLA3EvoDX1u9qMPry+lld08tCmxNBCtX3vKgqTYP
8dZ90eBH7LW62cKD/snQJg/MxkB+uE6ldz8PuizlpjWTEwebjkrWfls8qD7l
83yiRhJo1kmgm395kFZUqb5TZBKks1NEPP/h/RDII3K7OQkUny8NO9Lxohob
cq6PygMI3iq0MmbjRcXqM/dNIRno4ohW8oK8aDB1TEtZ9RHsqpi0+HOKF72f
7gOpG+mw+2+Cmac/L/LIDchXFsyF86MXXj4KxD9/Il/g3ZlcuPGehe9NMC+S
eve4V9cxF9oSbnWyhvEi4Wknc4fKXPA+4KmRf5cXBRnq/knUzYMOXT353gz8
+ueXjimH5cPtXA4epbe8KFxA0HB09AmURrZ5XG3gRYG6N2X0mQuhzzXiU/R/
vOhuT49jqWQhSMnvRPe850Uts4mEvb6F8O3DbxqPDl60xpt+e5WtCGT/tM/l
/uBFi08//E6XegoT5+62MdOT0FTLGluXaQnYaFmL7GckoSt2kYRnASUwqCPn
fYaZhIhxKcumGSXQfXlY1H8XCbH7W+5TGCyBxqvH/X7xkpCUSbfvoPkzyAz5
Jv5pPwkly9IXnzUoBUoYNWhGnIQUNA8/kfIshQcRd7oYJUhIT8TfejyuFGLu
HQ0BKRIi37+YWtFaCr7pYT3UEyR0P/8XR6NiGVyqPnwn6RwJFWlr3BellENH
Lc23cg0S0vAUtQ09Vg5ab75Kt2uRkKv2WkSOdjmoNId8p9cjoTzXxKCDoeUg
3dV13NuYhPbW7B46ic+fu+YDRo2dSIjGsuDnhi4Vopb0FG66kNC7o4fTBc2o
QLe6Py7hGgkNDydrC9hTYXP788k2TxJieq9UVBpAhSnWfQmn/Uloeniken8B
Ff470A7Cd0nINmUIDi3i83XcsCb5HglxJe3Nd9ygQsefpcsc93G/bAwiImgx
GGrid91JJCFA+vssuDFYt3FIGUojoVv3/KM8j+J81eaf15NBQv3XY1KzT2DA
cCyu7NNjElLrurn+TAkDIm1l05tcEjrgOMNjoYXBkSzC4uNiEmpcPEnks8Pg
OSN5++EzEtrSejR0xAXnH7dDTPfLSGgnj2lJ2BPnRyW93SHPSYjVyNvnUSDO
G98yNaxqSeh9hepYTwLOXyrYJaNXJGRmd7L9A87/bsVNVrpvSKiUf2BPBs7/
gX6/bkIjCVFaK55+ysfgId/J3D1teL3v1rT7VmIgFKJdytdOQhx9XInqOF/l
TVjVcH4ioW75Pt75VzhfVkZ8+veFhHYPX2TpwPlffnda/1oXCfE7iBszv8fg
TXjp2PxXEnpcUiEs2IbBB4PuzeF+EvKS0Pv6+TPOd3WTDH3fSMhFzLnIsxPn
LbEtro5BEjLV0H35G+dFqxgOoZZhvJ6B1ltnezGYWBQVr/9BQhUtr21u4Lzp
aiJ3rOYnCR3/qD4WjPPocv15Jeo4CaXvTr95FedV/4Pm54smSag8VYBdDOdZ
mnh3g+xpEhp8O55Ti/NuxNpty5RfeH9tDB6WxHmY3eqhU/xvPN8fBXl+OC8/
ePf0RtQ8nk9oDiF7DOddqdchoYskdD16VSUb5+uc5I4Y32USehoTa+WP8/fB
vz+TPf6QkDSF/ZIUzutltmvZjmsk5LP0U+gVruXaWZ9Zb5DQ0D6o3ovz/avj
wtXGWyT0ezenqB2uVdJlGvX+khBdA6NJKK5bCWofz//D/fNMt/zf+wM9Z+M+
REtG3XwMx1T/9/cGX1x+KtCR0X/Cyt2z+P4WJ0PmpBnIaMyF7pw7rseyEzcO
MpGRsF537Ac8PmfmJ/SiLGTk6LVURIvrD4Soe2fZyCgl8nf+Fp7fkb9OZHt2
Mqra7/WxBc8/bk0rK4qTjIzinx1ywv2ZX5Q8WMJNRiufuhu+4/7pzXJiH3nI
6IeJVNZe3N/nE4snF0hklPqKqV0J95/nR1cjkUJGbFK1Bofx+tz4VqklJ0BG
H3c/VZntw3n666NuIyE8nuozT0J7MDjR4WfhL0xGomabsVNd+HlqUnJ/K0ZG
El8/ix3/hIHJ2z3rP/aR0QNRwgrpAwa1L2lv0YuTUSt7cGw73m9BZc2JGofJ
6JpKk01lPX4+iwoFXSXJyN6nq20S71eUF50fd5SMrga/0JmrwYCQcqGq6zgZ
1R1JZfGlYnA18SisypGRS9uq11YJBk2x3C0UBTLyk+kzNyjE++XW134LRTLK
e9AleisTg8mAaptQZTK6qaQkb5SCwXnv1F+5iIyw9+/PEJIwYHOx+DupSkbE
hMLK3kgM4i+Ni3hdIKM/7BltYe4YLOq8f/pAl4zIinKyDE74edB4eqz6IhnV
SjcUm9tgQFK+prp9mYx2j6WZx13CIE38j0OEJRltuV03ppXHYEu0d6HImoxc
7Q4WyePPG3Ohl34fbMiI+46vsZo4Bnu4g+5yOeDrVj3Jk2QM8jfpy9PcyShG
sLNDe4UKDH8m5F974v5HOLme/UUF+/mW+uHrZJT8Y3qFOEqFQ2Oxnft8cf98
e3OVPlOh7CPvalkoGSnv0g14X0iF6ux9Sv8lkJGS7Put4YtU2PdPNaAhiYwW
um+mqpyjQryF3cu3yWR0pSPGMkKRCo4CT+RepZJRxwE32ecHqCDwQFyqMoeM
Hv4NZlBZLofASIk9hRgZmbKf7qDI4s9/N2nau1/I6ITZcpDvvVIoa9eD6C68
/8u9bB3x7x/Bw55BkV/JqPlNFvXQ5VJYmcQ2wvrJaHsiPV5MqBQKrhxfCvyB
+yl67uh24TNgvnzip9siGTXcnW94V10Cn04rNutz86E2BXPlhLqnEFNzc0ud
hw/dGHOUsE5/CufkymVOk/iQB1/rKZ6Ap1AvJfZ4Lz8fiqq8uyh+6ilUiDL7
rIjwIeWq9WGB6iJIYeo++FCaD93MKfbPflYIV7tcYvt1+RBH5eax7egCWHdO
N7CO40N5U7ecDI/kwH3/PKaQeD60m0pMCmTMgQMxJXWZiXwozkXXrXgkGy4/
rdv77SEf2koS79qTnA3PJ78tX87iQ9+G9nQx/s0CV1uhB1pUPrQmyc/mV5gJ
IxaZ3Sc6+ZBtVU7xI0oq+FwriLrczYfOPNkTrvwlBTiCShVv9PAhQ+uRv4Ix
KaCU8TofG+BDt60+mYdsP4K0gcEbR37yocuM9xSZxh7CJSNhktgKH7JT/rvJ
/fYBtOhlXWYnU1CH1JFYz2fx4Nw0/oaJQkHM+QpBh73igV3hyEGCAAXdXmkY
kVGIB/09LzdXd1MQT0wvg07Mffj2uzNrZD8FcUpKEO4334O5GMaZCjkKkqFU
FTGaxUD8jrZBmTwFERpFOGoWouG4V9KropMUFK1Dr8AfGQ2+JiL3M5UoSKtQ
WHqhMgoIB0/JRqpRkOVi/Q2SUCSQmq8Fm16mILKQ5AFTtnCoUXgxecmIglYf
pBzJfRYGps829XRNKOgw6y22Mp0weJwUuVfVgoLeFMqukJJvw0GbnBZJOwr6
zBdwSv3wLVD8102kvUlBNaJJ06e2A2HISzBwy5uCdtIMV3SNA+HWxJXxP74U
dHGodQ9nVQC8+zhXPRNIQXecbYuTvP1BN4PZojucgmTtBuh/sfmCzUnFwsIH
FDT6VsDdJfo6OP3++Of7QwpaFyzjPrPoBR45VqrEVAqi4yjNvWDmBSEsYT8C
MykoMCj0Ku8JT8jobxXUf0JBzeNvzA6yu0HePTPnyCIKOvXpRE4tzTUoPvO7
5lUxBY1nXj71fd0FXj7lMhQvp6AN35Nt31edoMfPKH67Gv+8wojAaQl7GJSc
HpKppSDp9aETVBU7GPvhL+nwioKC4oaTvljZwrLG47Yv9RTkfCxe6kCRDXAJ
jNMXtlKQaPId/8FRS+D75G3w/QMFOZ1ncVO0sgDh28y53J8oyFeg9em+cTOQ
nDkMgZ0UlOkzV/yE3QQ0a738Ln7D/fltXkPTaQAX3ehbIgbxeis/7DiVrg/G
Yg/Jr4Yp6KDdw9H9bhfBIeZlxYExCtLwN5BDNjrgpqxFMJ+gILP/ni65qWiD
99J3vYQpCkqzm78jckITwk1p5rZmKchL5+fiIWN1uMuRqCgzT0H02/2r9yNU
IbFx7137RQq68FFfIrlFBXIkzh388oeCUgvDS49wAhQN9XkzrlNQW9V1N0UW
RaAmOjef3qQgWlU3iVqJk/Bm857Nkx0Kypl7tnJw7Dg0l+3BvtHwo8m+nPOS
gTLQboP946LjR8LZHOqxPlLQTT6ro87Aj4LvVfqsqUnAt7bujAAmflR2f+F6
ydUDMBps/4vKwo+in8jbV3WIwcyx9ZMTbPyoGrtbrimwBxYnoqMEOfjR7Sx5
K+Zj/LCeJtirx8WPvnnT29VN8cA/ndL9EUR+ZG9ydNdcIAcw0sGNOl5+xGdr
FZFizwjs1R2NC2R+lLo7w0Z89z9lXhcb7gP8/OjdhcGNhellZcE9K1Zmgvwo
W2P0zDWHCWWxrjtl8bvx/V0sDaxnupQlIvn+Nu/hR1zZTsT6mQplmdNPtbZE
+dHy////hP8D2Bon7g==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
+dHy////hP8D2Bon7g==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.605458450060775*^9, 3.6067509778384748`*^9, 
  3.6067511403072248`*^9, 3.6067512314791*^9, 3.6067512642759748`*^9, 
  3.6067514729322248`*^9, 3.60675179863535*^9, 3.6067520389634748`*^9, 
  3.60675233988535*^9, 3.6067524663072248`*^9, 3.60675256688535*^9, 
  3.6067569407916*^9, 3.6067576015884748`*^9, 3.6073597226581097`*^9, 
  3.6073617254706097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotSatPol111", "[", 
  RowBox[{
  "\"\<xy\>\"", ",", " ", "\"\<xy\>\"", ",", " ", "100", ",", " ", "0.1"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.604423901293537*^9, {3.604424209961461*^9, 3.6044242103989553`*^9}, {
   3.6067523327759748`*^9, 3.6067523344634748`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
lfaWCC8S/f//Z/g/xoqVeg==
      "]]}}, {{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1: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
Rzmkp56Sjxx7orcpJoim////E/4PkVC3rA==
      "]]}}, {{}, {}, 
    {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
Rzmkp56Sjxx7orcpJoim////E/4PkVC3rA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.60545845829515*^9, 3.6067509791666*^9, 
  3.6067511416197248`*^9, 3.6067512327916*^9, 3.60675126557285*^9, 
  3.6067514742134748`*^9, 3.60675179994785*^9, 3.6067520402759748`*^9, 
  3.6067523399009748`*^9, 3.6067524747916*^9, 3.60675257538535*^9, 
  3.6067569490884748`*^9, 3.6067576099009748`*^9, 3.6073597318143597`*^9, 
  3.6073617337362347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", " ", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pol100", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "10.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "/", 
        RowBox[{"Pol100", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "10.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"B", ",", " ", "0.0", ",", " ", "1.0"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", " ", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pol110", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "10.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "/", 
        RowBox[{"Pol110", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "10.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"B", ",", " ", "0.0", ",", " ", "1.0"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"th", ",", " ", "0", ",", " ", "90"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6067527471041*^9, 3.6067527896822248`*^9}, {
  3.6067528392447248`*^9, 3.6067528532759748`*^9}, {3.60675289888535*^9, 
  3.6067529584634748`*^9}, {3.6067532833072248`*^9, 3.6067532908697248`*^9}, {
  3.6067533501197248`*^9, 3.6067533662291*^9}, {3.60675340026035*^9, 
  3.60675341013535*^9}, {3.6067555181509748`*^9, 3.6067555965884748`*^9}, {
  3.6067556749009748`*^9, 3.6067556784634748`*^9}, {3.60675784669785*^9, 
  3.6067578652134748`*^9}, {3.6067579347291*^9, 3.6067580143541*^9}, {
  3.6067582239947248`*^9, 3.60675823388535*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`th$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`th$$], 0, 90}}, Typeset`size$$ = {360., {113., 117.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`th$89907$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`th$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`th$$, $CellContext`th$89907$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Plot[$CellContext`Pol100[
          "z", "z", 10., "L", 
           180 ($CellContext`th$$/Pi), $CellContext`B]/$CellContext`Pol100[
         "z", "z", 10., "L", 180 ($CellContext`th$$/Pi), 0], {$CellContext`B, 
          0., 1.}, PlotRange -> Full], 
        Plot[$CellContext`Pol110[
          "z", "z", 10., "L", 
           180 ($CellContext`th$$/Pi), $CellContext`B]/$CellContext`Pol110[
         "z", "z", 10., "L", 180 ($CellContext`th$$/Pi), 0], {$CellContext`B, 
          0., 1.}, PlotRange -> Full]], 
      "Specifications" :> {{$CellContext`th$$, 0, 90}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {158., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6067579901509748`*^9, 3.6067580151509748`*^9}, 
   3.60675823569785*^9, 3.6073597318299847`*^9, 3.6073617337518597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Pol111", "[", 
       RowBox[{
       "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "0.1", ",", " ", 
        "\"\<L\>\"", ",", 
        RowBox[{"180", "*", 
         RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "/", 
      RowBox[{"Pol111", "[", 
       RowBox[{
       "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "0.1", ",", " ", 
        "\"\<L\>\"", ",", 
        RowBox[{"180", "*", 
         RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"B", ",", " ", "0.0", ",", " ", "1.0"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"th", ",", " ", "0.1", ",", " ", "90"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6067530042916*^9, 3.6067530231509748`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`th$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`th$$], 0.1, 90}}, Typeset`size$$ = {
    360., {113., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`th$89934$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`th$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`th$$, $CellContext`th$89934$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`Pol111[
         "z", "z", 0.1, "L", 
          180 ($CellContext`th$$/Pi), $CellContext`B]/$CellContext`Pol111[
        "z", "z", 0.1, "L", 180 ($CellContext`th$$/Pi), 0], {$CellContext`B, 
         0., 1.}, PlotRange -> Full], 
      "Specifications" :> {{$CellContext`th$$, 0.1, 90}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {158., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.60675301657285*^9, 3.6067530240259748`*^9}, 
   3.6067569494634748`*^9, 3.6067576108384748`*^9, 3.6073597323299847`*^9, 
   3.6073617342362347`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "b_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "b"}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "b"}], ")"}], "^", "2"}], "+", 
      RowBox[{"2", "*", 
       RowBox[{"b", "^", "2"}]}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.60675652757285*^9, 3.60675653726035*^9}, {
  3.6067566614009748`*^9, 3.60675669001035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"H", "[", "b", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"b", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6067566909322248`*^9, 3.6067566993541*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 1}, {0., 0.9999999183673496}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.60675669963535*^9, 3.6067569500572248`*^9, 
  3.6067576108541*^9, 3.6073597329549847`*^9, 3.6073617348456097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{"Pol100", "[", 
       RowBox[{
       "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
        "\"\<L\>\"", ",", 
        RowBox[{"180", "*", 
         RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "]"}], "]"}]}], 
   "]"}], "/", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{"Pol100", "[", 
       RowBox[{
       "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
        "\"\<L\>\"", ",", 
        RowBox[{"180", "*", 
         RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6067567838384748`*^9, 3.6067567941197248`*^9}, {
  3.60675683569785*^9, 3.60675686044785*^9}, {3.60675708994785*^9, 
  3.60675709751035*^9}, {3.6067573470884748`*^9, 3.6067573517134748`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"0.7071067811865476`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.7071067811865476`", " ", "B"}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "th"}], "]"}]}], ")"}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
     RowBox[{"B", " ", 
      RowBox[{"(", 
       RowBox[{"2.`", "\[VeryThinSpace]", "+", 
        RowBox[{"3.`", " ", "B"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.5`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "th"}], "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.6067568012447248`*^9, {3.60675684288535*^9, 3.6067568624947248`*^9}, 
   3.6067569590572248`*^9, 3.60675709838535*^9, 3.6067573529166*^9, 
   3.6067576112447248`*^9, 3.6073597335956097`*^9, 3.6073617352362347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"Pol100", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "]"}], 
       "]"}]}], "]"}], "/", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"Pol100", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}], "]"}], 
       "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6067573587447248`*^9, 3.6067573658541*^9}, {
  3.6067574412291*^9, 3.6067574414791*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
     RowBox[{"1.`", " ", "B"}]}], ")"}], "2"], 
  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
   RowBox[{"B", " ", 
    RowBox[{"(", 
     RowBox[{"2.`", "\[VeryThinSpace]", "+", 
      RowBox[{"3.`", " ", "B"}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.6067573662916*^9, 3.60675744282285*^9, 
  3.6067576113541*^9, 3.6073597336893597`*^9, 3.6073617353299847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"th", " ", ">", "0"}], "  ", "&&", " ", 
       RowBox[{"B", " ", ">", " ", "0"}]}], ",", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"Pol110", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "]"}], 
       "]"}]}], "]"}], "/", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"Pol110", "[", 
         RowBox[{
         "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}], "]"}], 
       "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6067575659791*^9, 3.6067575689322248`*^9}, {
  3.6067577646197248`*^9, 3.60675776976035*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.8660254037844386`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.8660254037844386`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "B"}]}], ")"}],
      "2"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.5`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "B"}]}], 
       ")"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "th"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1.5`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
      RowBox[{"B", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"5.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"5.5`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "B"}]}], 
        ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2.827734791113756`*^-17", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "th"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.16666666666666669`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "th"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.1926223897340549`*^-18", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"8", " ", "th"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.7755575615628914`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       RowBox[{"Cos", "[", "th", "]"}], " ", 
       RowBox[{"Sin", "[", "th", "]"}]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6067575874947248`*^9, 3.6067576146509748`*^9}, 
   3.6067577740572248`*^9, 3.6073597372831097`*^9, 3.6073617388299847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"0.5", "-", 
   RowBox[{"0.16666666666666669`", 
    RowBox[{"Cos", "[", 
     RowBox[{"4", " ", "th"}], "]"}]}]}], ")"}]], "Input",
 CellChangeTimes->{{3.6067585854947248`*^9, 3.6067586611041*^9}}],

Cell[BoxData[
 RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.16666666666666669`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "th"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.6073597373456097`*^9, 3.6073617388612347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"1.5", "\[VeryThinSpace]", "+", 
   RowBox[{"B", " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"5.5", " ", "B"}]}], ")"}]}]}], ")"}]], "Input",
 CellChangeTimes->{{3.6067588493384748`*^9, 3.60675888563535*^9}}],

Cell[BoxData[
 RowBox[{"1.5`", "\[VeryThinSpace]", "+", 
  RowBox[{"B", " ", 
   RowBox[{"(", 
    RowBox[{"5", "+", 
     RowBox[{"5.5`", " ", "B"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6073597373612347`*^9, 3.6073617388612347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"th", " ", ">", "0"}], "  ", "&&", " ", 
      RowBox[{"B", " ", ">", " ", "0"}]}], ",", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Expand", "[", 
       RowBox[{"Pol111", "[", 
        RowBox[{
        "\"\<z\>\"", ",", " ", "\"\<z\>\"", ",", " ", "1.0", ",", " ", 
         "\"\<L\>\"", ",", 
         RowBox[{"180", "*", 
          RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "]"}], "]"}]}],
     "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.60675909319785*^9, 3.60675909713535*^9}, 
   3.6067601581666*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6067601259322248`*^9, 3.6067601812916*^9, 
  3.6073602465174847`*^9, 3.6073644519862347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"Pol100", "[", 
         RowBox[{
         "\"\<xy\>\"", ",", " ", "\"\<xy\>\"", ",", " ", "1.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "B"}], "]"}], "]"}], 
       "]"}]}], "]"}], "/", 
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"th", " ", ">", "0"}], " ", ",", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Expand", "[", 
        RowBox[{"Pol100", "[", 
         RowBox[{
         "\"\<xy\>\"", ",", " ", "\"\<xy\>\"", ",", " ", "1.0", ",", " ", 
          "\"\<L\>\"", ",", 
          RowBox[{"180", "*", 
           RowBox[{"th", "/", "Pi"}]}], ",", " ", "0"}], "]"}], "]"}], 
       "]"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6073644664706097`*^9, 3.6073644729549847`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.4422495703074083`"}], "+", 
     RowBox[{"1.4422495703074083`", " ", "B"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.7211247851537042`"}], "-", 
       RowBox[{"1.2490247664834064`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"1.4422495703074083`", " ", "B"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.7211247851537042`"}], "+", 
       RowBox[{"1.2490247664834064`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"1.4422495703074083`", " ", "B"}]}], ")"}]}], 
  RowBox[{
   RowBox[{"-", "3.`"}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6.`"}], "+", 
      RowBox[{"B", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2.`"}], "+", 
         RowBox[{"1.`", " ", "B"}]}], ")"}]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.6073644746737347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1.4422495703074083`"}], "+", 
     RowBox[{"1.4422495703074083`", " ", "B"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.7211247851537042`"}], "-", 
       RowBox[{"1.2490247664834064`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"1.4422495703074083`", " ", "B"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "0.7211247851537042`"}], "+", 
       RowBox[{"1.2490247664834064`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
     RowBox[{"1.4422495703074083`", " ", "B"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6073645469706097`*^9, 3.6073645506268597`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2.9999999999999996`"}], "+", 
    RowBox[{"1.5590827240341554`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"5.999999999999999`", "\[VeryThinSpace]", "-", 
     RowBox[{"4.440892098500626`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   "B"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"6.`", "\[VeryThinSpace]", "-", 
     RowBox[{"4.440892098500626`*^-16", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["B", "2"]}], "+", 
  RowBox[{"3.`", " ", 
   SuperscriptBox["B", "3"]}]}]], "Output",
 CellChangeTimes->{3.6073645510331097`*^9}]
}, Open  ]]
},
WindowSize->{1325, 787},
WindowMargins->{{Automatic, 10}, {-1, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{594, 774}},
Magnification->0.9999998807907104,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 293, 7, 30, "Input"],
Cell[853, 29, 603, 13, 30, "Input"],
Cell[1459, 44, 1730, 52, 109, "Input"],
Cell[3192, 98, 1410, 43, 109, "Input"],
Cell[4605, 143, 1504, 43, 51, "Input"],
Cell[6112, 188, 1344, 37, 91, "Input"],
Cell[7459, 227, 1249, 33, 91, "Input"],
Cell[8711, 262, 454, 11, 51, "Input"],
Cell[9168, 275, 508, 13, 51, "Input"],
Cell[9679, 290, 1020, 24, 51, "Input"],
Cell[10702, 316, 353, 6, 30, "Input"],
Cell[11058, 324, 1863, 43, 30, "Input"],
Cell[12924, 369, 1827, 50, 51, "Input"],
Cell[14754, 421, 327, 8, 30, "Input"],
Cell[15084, 431, 2375, 71, 87, "Input"],
Cell[17462, 504, 297, 7, 30, "Input"],
Cell[17762, 513, 2770, 82, 123, "Input"],
Cell[20535, 597, 6120, 155, 191, "Input"],
Cell[26658, 754, 942, 22, 30, "Input"],
Cell[27603, 778, 1404, 35, 51, "Input"],
Cell[29010, 815, 1155, 26, 51, "Input"],
Cell[30168, 843, 1757, 40, 71, "Input"],
Cell[31928, 885, 1368, 31, 51, "Input"],
Cell[CellGroupData[{
Cell[33321, 920, 3254, 73, 71, "Input"],
Cell[36578, 995, 2887, 56, 495, "Output"]
}, Open  ]],
Cell[39480, 1054, 92, 1, 30, "Input"],
Cell[39575, 1057, 1326, 34, 51, "Input"],
Cell[40904, 1093, 1327, 34, 51, "Input"],
Cell[42234, 1129, 1325, 34, 51, "Input"],
Cell[CellGroupData[{
Cell[43584, 1167, 2073, 53, 71, "Input"],
Cell[45660, 1222, 2671, 54, 491, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48368, 1281, 2151, 54, 71, "Input"],
Cell[50522, 1337, 2661, 54, 365, "Output"]
}, Open  ]],
Cell[53198, 1394, 2366, 55, 71, "Input"],
Cell[55567, 1451, 2336, 55, 71, "Input"],
Cell[57906, 1508, 2326, 55, 71, "Input"],
Cell[CellGroupData[{
Cell[60257, 1567, 1056, 17, 30, "Input"],
Cell[61316, 1586, 428, 8, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61781, 1599, 367, 7, 30, "Input"],
Cell[62151, 1608, 66039, 1089, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128227, 2702, 299, 7, 30, "Input"],
Cell[128529, 2711, 66066, 1089, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194632, 3805, 2235, 50, 51, "Input"],
Cell[196870, 3857, 2093, 42, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199000, 3904, 915, 23, 30, "Input"],
Cell[199918, 3929, 1857, 38, 337, "Output"]
}, Open  ]],
Cell[201790, 3970, 519, 16, 30, "Input"],
Cell[CellGroupData[{
Cell[202334, 3990, 249, 6, 30, "Input"],
Cell[202586, 3998, 4259, 75, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206882, 4078, 1087, 28, 30, "Input"],
Cell[207972, 4108, 971, 26, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208980, 4139, 1109, 29, 71, "Input"],
Cell[210092, 4170, 474, 12, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210603, 4187, 1187, 31, 71, "Input"],
Cell[211793, 4220, 2829, 78, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214659, 4303, 237, 6, 30, "Input"],
Cell[214899, 4311, 240, 5, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215176, 4321, 265, 7, 30, "Input"],
Cell[215444, 4330, 242, 6, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215723, 4341, 681, 18, 30, "Input"],
Cell[216407, 4361, 150, 2, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216594, 4368, 1072, 28, 71, "Input"],
Cell[217669, 4398, 1033, 32, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218739, 4435, 784, 21, 51, "Input"],
Cell[219526, 4458, 661, 18, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
